<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="NodeC" loc="18:/home/luis/workspace/Project0/src/NodeC.nc">
      <configuration/>
    </component>
    <component qname="MainC" loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/luis/local/tinyos-2.1.1/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/luis/local/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/home/luis/local/tinyos-2.1.1/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/home/luis/local/tinyos-2.1.1/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="52:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Node" loc="17:/home/luis/workspace/Project0/src/Node.nc">
      <module/>
    </component>
    <component qname="NodeC.CheckNeighborTimer" loc="44(NodeC.CheckNeighborTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/luis/local/tinyos-2.1.1/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/luis/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da2e461d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8da2e46530"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b8da341b068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da2e461d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8da2e46530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da2e461d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8da2e46530"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/luis/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/luis/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da2e461d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8da2e46530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SendNeighborsTimer" loc="44(NodeC.SendNeighborsTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.BuildRoutingTableTimer" loc="44(NodeC.BuildRoutingTableTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.AttemptConnectionTimer" loc="44(NodeC.AttemptConnectionTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.ClientWriteTimer" loc="44(NodeC.ClientWriteTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleSendC" loc="1:/home/luis/workspace/Project0/src/lib/modules/SimpleSendC.nc">
      <configuration/>
    </component>
    <component qname="SimpleSendP" loc="11:/home/luis/workspace/Project0/src/lib/modules/SimpleSendP.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; &#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; &#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimpleSendC.sendTimer" loc="44(SimpleSendC.sendTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/luis/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/luis/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimpleSendC.AMSenderC" loc="47(SimpleSendC.AMSenderC):/home/luis/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleSendC.AMSenderC.SenderC" loc="47(SimpleSendC.AMSenderC.SenderC):/home/luis/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/home/luis/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SimpleSendC.PoolC" loc="41(SimpleSendC.PoolC):/home/luis/local/tinyos-2.1.1/tos/system/PoolC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x2b8da3304110"/>
            <typename><typedef-ref name="sendInfo" ref="0x2b8da3304b40"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleSendC.PoolC.PoolP" loc="53(SimpleSendC.PoolC.PoolP):/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b8da37503c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SimpleSendC.QueueC" loc="42(SimpleSendC.QueueC):/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x2b8da3304110"/>
              <typename><typedef-ref name="sendInfo" ref="0x2b8da3304b40"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.AMReceiverC" loc="43(NodeC.AMReceiverC):/home/luis/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC" loc="12:/home/luis/workspace/Project0/src/lib/modules/CommandHandlerC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/lib/modules/CommandHandlerC.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketInfoC" loc="1:/home/luis/workspace/Project0/src/lib/modules/PacketInfoC.nc">
      <module/>
    </component>
    <component qname="NeighborC" loc="8:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <module/>
    </component>
    <component qname="NodeC.Neighbors" loc="13(NodeC.Neighbors):/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; TODO: Impliment with pointers.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="NeighborTuple" ref="0x2b8da2e43588"/>
            <typename><typedef-ref name="NeighborTuple" ref="0x2b8da2e43dc8"/></typename>
          </type-tag>
          <value cst="I:16">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.NeighborLS" loc="13(NodeC.NeighborLS):/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; TODO: Impliment with pointers.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="LinkState" ref="0x2b8da37a39a8"/>
            <typename><typedef-ref name="LinkState" ref="0x2b8da37e6bb8"/></typename>
          </type-tag>
          <value cst="I:16">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.UpdateNeighborsTimer" loc="44(NodeC.UpdateNeighborsTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.NoUpdatesTimer" loc="44(NodeC.NoUpdatesTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="FloodingC" loc="9:/home/luis/workspace/Project0/src/lib/modules/FloodingC.nc">
      <module/>
    </component>
    <component qname="NodeC.recPackets" loc="13(NodeC.recPackets):/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; TODO: Impliment with pointers.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:6" alignment="I:2"><struct-ref name="PacketID" ref="0x2b8da2e44780"/>
            <typename><typedef-ref name="PacketID" ref="0x2b8da2e43228"/></typename>
          </type-tag>
          <value cst="I:99">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.sentPackets" loc="13(NodeC.sentPackets):/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; TODO: Impliment with pointers.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:30" alignment="I:2"><struct-ref name="SentTuple" ref="0x2b8da2e39828"/>
            <typename><typedef-ref name="SentTuple" ref="0x2b8da2e38020"/></typename>
          </type-tag>
          <value cst="I:99">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ShortestPathC" loc="11:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <module/>
    </component>
    <component qname="NodeC.Tentative" loc="10(NodeC.Tentative):/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-tag size="I:6" alignment="I:2"><struct-ref name="Route" ref="0x2b8da2e38330"/>
            <typename><typedef-ref name="Route" ref="0x2b8da2e38d80"/></typename>
          </type-tag>
          <value cst="I:16">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.ConfirmedNodes" loc="10(NodeC.ConfirmedNodes):/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-tag size="I:6" alignment="I:2"><struct-ref name="Route" ref="0x2b8da2e38330"/>
            <typename><typedef-ref name="Route" ref="0x2b8da2e38d80"/></typename>
          </type-tag>
          <value cst="I:16">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC" loc="6:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <module/>
    </component>
    <component qname="NodeC.TimeoutTimer" loc="44(NodeC.TimeoutTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.HandShakeTimer" loc="44(NodeC.HandShakeTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.AckTimer" loc="44(NodeC.AckTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.Sockets" loc="10(NodeC.Sockets):/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-tag size="I:10352" alignment="I:4"><struct-ref name="socket_storage_t" ref="0x2b8da2e55380"/>
            <typename><typedef-ref name="socket_storage_t" ref="0x2b8da2e4e848"/></typename>
          </type-tag>
          <value cst="I:15">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.FDs" loc="10(NodeC.FDs):/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
          </type-int>
          <value cst="I:15">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ApplicationC" loc="9:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <module/>
    </component>
    <component qname="NodeC.TryWritingTimer" loc="44(NodeC.TryWritingTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.ReadTimer" loc="44(NodeC.ReadTimer):/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.Users" loc="10(NodeC.Users):/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-tag size="I:168" alignment="I:8"><struct-ref name="User" ref="0x2b8da2e4c020"/>
            <typename><typedef-ref name="User" ref="0x2b8da2e4cb98"/></typename>
          </type-tag>
          <value cst="I:15">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b8da341b068" loc="23:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b8da341b068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b8da341b358" loc="23:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b8da2f7fad8" loc="41:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b8da2f7fe40" loc="42:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b8da2f7c1e0" loc="43:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b8da2f7c510" loc="44:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/home/luis/local/tinyos-2.1.1/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b8da37503c0" loc="41:/home/luis/local/tinyos-2.1.1/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b8da37503c0"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x2b8da3750710" loc="41:/home/luis/local/tinyos-2.1.1/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b8da37474c0" loc="53:/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b8da37474c0"/></type-var>
        </typedef>
        <constant name="size" ref="0x2b8da37477e0" loc="53:/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b8da2ff1d90" loc="42:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b8da3019160" loc="43:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b8da30194c8" loc="44:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b8da30197f8" loc="45:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8da35d1b70" loc="46:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8da35d1b70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b8da35d1e80" loc="46:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b8da36e4dc0" loc="45:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b8da2f61290" loc="40:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b8da2f615d8" loc="40:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b8da2f61920" loc="40:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/luis/local/tinyos-2.1.1/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b8da3780020" loc="43:/home/luis/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8da357c300" loc="46:/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8da357c300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b8da3766270" loc="42:/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b8da3766270"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b8da37665c8" loc="42:/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b8da3412730" loc="23:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b8da3412730"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b8da3412a20" loc="23:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/luis/local/tinyos-2.1.1/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b8da369b4e8" loc="47:/home/luis/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ListC" loc="13:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc" abstract="">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; TODO: Impliment with pointers.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8da3822020" loc="13:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da3822020"/></type-var>
        </typedef>
        <constant name="n" ref="0x2b8da38222d8" loc="13:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b8da36c0b78" loc="43:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HashmapC" loc="10:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc" abstract="">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8da38fa4f8" loc="10:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
          <component-ref qname="HashmapC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da38fa4f8"/></type-var>
        </typedef>
        <constant name="n" ref="0x2b8da38fa7b0" loc="10:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
          <component-ref qname="HashmapC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/luis/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b8da36c40c8" loc="47:/home/luis/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/luis/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/luis/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8da3607748" loc="46:/home/luis/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8da3607748"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SimpleSend" loc="3:/home/luis/workspace/Project0/src/lib/interfaces/SimpleSend.nc">
      <function command="" provided="0" name="send" ref="0x2b8da3336020" loc="4:/home/luis/workspace/Project0/src/lib/interfaces/SimpleSend.nc">
        <interfacedef-ref qname="SimpleSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
              <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
            </type-tag>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3339938" loc="4:/home/luis/workspace/Project0/src/lib/interfaces/SimpleSend.nc">
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
              <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
            </type-tag>
          </variable>
          <variable name="dest" ref="0x2b8da3339c68" loc="4:/home/luis/workspace/Project0/src/lib/interfaces/SimpleSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b8da30dd020" loc="113:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8da30dfd58" loc="113:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b8da30dc430" loc="138:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8da30dc1c0" loc="138:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8da30df3e0" loc="104:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8da30dd808" loc="130:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/luis/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Hashmap" loc="10:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This is an interface for Hashmaps.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This is an interface for Hashmaps.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8da33101e0" loc="10:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
          <interfacedef-ref qname="Hashmap"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da33101e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b8da330e020" loc="13:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b8da330b930" loc="18:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8da330e8b8" loc="14:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da33101e0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x2b8da330e648" loc="14:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b8da330b290" loc="17:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x2b8da330f8c8" loc="12:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x2b8da330f658" loc="12:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x2b8da330f020" loc="11:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da33101e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x2b8da33109a0" loc="11:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
          <variable name="input" ref="0x2b8da3310c90" loc="11:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da33101e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getKeys" ref="0x2b8da330a070" loc="19:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAddr" ref="0x2b8da330c2c8" loc="15:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da33101e0"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x2b8da330c020" loc="15:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="contains" ref="0x2b8da330cbb8" loc="16:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x2b8da330c948" loc="16:/home/luis/workspace/Project0/src/dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ShortestPath" loc="3:/home/luis/workspace/Project0/src/lib/interfaces/ShortestPath.nc">
      <function command="" provided="0" name="Dijkstra" ref="0x2b8da3323940" loc="5:/home/luis/workspace/Project0/src/lib/interfaces/ShortestPath.nc">
        <interfacedef-ref qname="ShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="RoutePack" ref="0x2b8da3354a10" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/ShortestPath.nc">
        <interfacedef-ref qname="ShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myMsg" ref="0x2b8da33547a0" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/ShortestPath.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="PrintRoutingTable" ref="0x2b8da33540d8" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/ShortestPath.nc">
        <interfacedef-ref qname="ShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="SendPack" ref="0x2b8da3353370" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/ShortestPath.nc">
        <interfacedef-ref qname="ShortestPath"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myMsg" ref="0x2b8da3353100" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/ShortestPath.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/luis/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/luis/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b8da2f210d8" loc="60:/home/luis/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/luis/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8da364c9c0" loc="50:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da364c9c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b8da3645910" loc="97:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="91:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da364c9c0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b8da3647290" loc="80:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="74:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b8da3648258" loc="61:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="52:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x2b8da3647c58" loc="89:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="82:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da364c9c0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b8da36479e8" loc="89:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da364c9c0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b8da3648a40" loc="72:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
        <documentation loc="63:/home/luis/local/tinyos-2.1.1/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/luis/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b8da2e0b070" loc="67:/home/luis/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/luis/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b8da2e0b860" loc="75:/home/luis/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/luis/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b8da345fbf8" loc="38:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b8da345e3e0" loc="44:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b8da345f4f0" loc="32:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b8da345eb90" loc="50:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b8da3425328" loc="21:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33df5e0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b8da33df9e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b8da3425cd8" loc="27:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33df5e0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b8da33df9e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b8da3425a68" loc="27:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33df5e0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b8da33df9e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x2b8da31306c8" loc="45:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b8da1ecf020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3130458" loc="45:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b8da3101a30" loc="65:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da31017c0" loc="65:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b8da30f7a38" loc="78:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da30f77c8" loc="78:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b8da30f5ca0" loc="126:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da30f56d8" loc="126:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8da30f59e8" loc="126:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8da30f8cf8" loc="106:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b8da30f6e10" loc="94:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da30f6880" loc="94:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8da30f6b90" loc="94:/home/luis/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/luis/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8da33b8bf8" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8da33b8bf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b8da33b44c8" loc="61:/home/luis/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/luis/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8da3657e48" loc="43:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da3657e48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b8da3653cf8" loc="73:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da3657e48"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b8da3651608" loc="90:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="83:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da3657e48"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b8da3651398" loc="90:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da3657e48"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b8da1ec4508"/>
              <value-structured>
                <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x2b8da1ec4508"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b8da364f4d0" loc="101:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="92:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da3657e48"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b8da364f260" loc="101:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b8da36535f0" loc="65:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="60:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b8da3650860" loc="81:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="75:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da3657e48"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b8da3654698" loc="50:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b8da3654db8" loc="58:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/luis/local/tinyos-2.1.1/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8da30da5c0" loc="80:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b8da30e1bd0" loc="80:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b8da30da020" loc="80:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8da30da330" loc="80:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b8da3103a68" loc="135:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da31034a0" loc="135:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8da31037b0" loc="135:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8da3105c58" loc="123:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8da3106890" loc="96:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3106620" loc="96:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8da3104cf8" loc="110:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3104750" loc="110:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8da3104a78" loc="110:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/luis/local/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b8da367cb78" loc="52:/home/luis/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="48:/home/luis/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b8da367c3e0" loc="46:/home/luis/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="42:/home/luis/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b8da3433020" loc="45:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33e4ce0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b8da33e2178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b8da3431360" loc="53:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33d84b8"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b8da33d88c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b8da34321d8" loc="49:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33dcd48"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b8da33db178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b8da3432b90" loc="50:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33dcd48"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b8da33db178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b8da3432920" loc="50:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33dcd48"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b8da33db178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b8da3431d18" loc="54:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33d84b8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b8da33d88c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b8da3431aa8" loc="54:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33d84b8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b8da33d88c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b8da34339f0" loc="46:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33e4ce0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b8da33e2178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b8da3433780" loc="46:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33e4ce0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b8da33e2178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8da36b8020" loc="75:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="57:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da36bc9c0" loc="75:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8da36bccd0" loc="75:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b8da36b32d8" loc="125:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="115:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da36b5cc8" loc="125:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8da36b3020" loc="125:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8da36b54c0" loc="112:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="102:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8da36b7290" loc="89:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="77:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da36b7020" loc="89:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8da36b6670" loc="100:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da36b60c8" loc="100:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8da36b63f0" loc="100:/home/luis/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/luis/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b8da3698218" loc="53:/home/luis/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b8da3698218"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b8da3698cc0" loc="64:/home/luis/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/luis/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b8da3698218"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b8da3698a50" loc="64:/home/luis/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b8da3698218"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b8da32e6800" loc="50:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b8da32e5710" loc="60:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b8da32e5020" loc="55:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b8da2dc8968"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b8da32e6020" loc="45:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b8da2dc8968"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b8da32e99b0" loc="45:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b8da2dc8968"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b8da32e9ce8" loc="45:/home/luis/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8da33f23e8" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8da33f23e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8da33f2618" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33f2618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b8da33ed020" loc="109:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33f2618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8da33ef070" loc="78:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b8da33ee5c0" loc="103:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33f2618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33f2618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b8da33ee020" loc="103:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33f2618"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b8da33ee340" loc="103:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33f2618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b8da33ef7e0" loc="88:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b8da33ed7a0" loc="116:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33f2618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8da33f0108" loc="66:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33f2618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b8da33f2e68" loc="66:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33f2618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8da33f08d8" loc="73:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/luis/local/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b8da2f203e0" loc="62:/home/luis/local/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="53:/home/luis/local/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Application" loc="5:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
      <function command="" provided="0" name="clientReady" ref="0x2b8da3374980" loc="15:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
        <interfacedef-ref qname="Application"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initializeClient" ref="0x2b8da3340a10" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
        <interfacedef-ref qname="Application"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="client_port" ref="0x2b8da3341d18" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_addr" ref="0x2b8da33400c8" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_port" ref="0x2b8da3340418" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="transfer" ref="0x2b8da3340770" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initializeServer" ref="0x2b8da33415f0" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
        <interfacedef-ref qname="Application"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="server_port" ref="0x2b8da3341380" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="serverReady" ref="0x2b8da33730d8" loc="17:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
        <interfacedef-ref qname="Application"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="query" ref="0x2b8da33742b0" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
        <interfacedef-ref qname="Application"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="qfd" ref="0x2b8da333e948" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x2b8da333eca0" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x2b8da3374020" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="messageClient" ref="0x2b8da333e2d0" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
        <interfacedef-ref qname="Application"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="client_port" ref="0x2b8da333f178" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_addr" ref="0x2b8da333f4c8" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_port" ref="0x2b8da333f818" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="size" ref="0x2b8da333fb38" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b8da333e020" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/Application.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Transport" loc="19:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
      <documentation loc="5:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <short>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP.</short>
        <long>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP. This will be used by the application layer to set up TCP&#10; packets. Internally the system will be handling syn/ack/data/fin&#10; Transport packets.&#10;&#10; @project&#10;   Transmission Control Protocol&#10; @author&#10;      Alex Beltran - abeltran2@ucmerced.edu&#10; @date&#10;   2013/11/12&#10;</long>
      </documentation>
      <function command="" provided="0" name="startTimer" ref="0x2b8da3356b38" loc="20:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x2b8da3347378" loc="149:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="140:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; Listen to the socket and wait for a connection.</short>
          <long>&#10; Listen to the socket and wait for a connection.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are hard closing. &#10; @side Server&#10; @return error_t - returns SUCCESS if you are able change the state &#10;   to listen else FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x2b8da3347108" loc="149:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x2b8da33458f0" loc="157:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="TCP" ref="0x2b8da3302958"/>
              <typename><typedef-ref name="TCP" ref="0x2b8da3300228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ack_TCP" ref="0x2b8da3345680" loc="157:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="TCP" ref="0x2b8da3302958"/>
              <typename><typedef-ref name="TCP" ref="0x2b8da3300228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b8da334c290" loc="85:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="77:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; This will pass the packet so you can handle it internally.</short>
          <long>&#10; This will pass the packet so you can handle it internally. &#10; @param&#10;    pack *package: the TCP packet that you are handling.&#10; @Side Client/Server &#10; @return uint16_t - return SUCCESS if you are able to handle this&#10;    packet or FAIL if there are errors.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="package" ref="0x2b8da334c020" loc="85:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="release" ref="0x2b8da33498b0" loc="138:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="129:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; A hard close, which is not graceful.</short>
          <long>&#10; A hard close, which is not graceful. This portion is optional.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are hard closing. &#10; @side Client/Server&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a closure with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x2b8da3349640" loc="138:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b8da334b3e0" loc="102:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="87:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; Read from the socket and write this data to the buffer.</short>
          <long>&#10; Read from the socket and write this data to the buffer. This data&#10; is obtained from your TCP implimentation.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting a read.&#10; @param&#10;    uint8_t *buff: the buffer that is being written.&#10; @param&#10;    uint16_t bufflen: the amount of data that can be written to the&#10;       buffer.&#10; @Side For your project, only server side. This could be both though.&#10; @return uint16_t - return the amount of data you are able to read&#10;    from the pass buffer. This may be shorter then bufflen&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x2b8da334ca68" loc="102:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x2b8da334cdc0" loc="102:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x2b8da334b150" loc="102:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x2b8da334f050" loc="44:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="32:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; Bind a socket with an address.</short>
          <long>&#10; Bind a socket with an address.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       you are binding.&#10; @param&#10;    socket_addr_t *addr: the source port and source address that&#10;       you are biding to the socket, fd.&#10; @Side Client/Server&#10; @return error_t - SUCCESS if you were able to bind this socket, FAIL&#10;       if you were unable to bind.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x2b8da3350a08" loc="44:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b8da3350da0" loc="44:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="socket" ref="0x2b8da3350258" loc="30:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="22:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; Get a socket if there is one available.</short>
          <long>&#10; Get a socket if there is one available.&#10; @Side Client/Server&#10; @return&#10;    socket_t - return a socket file descriptor which is a number&#10;    associated with a socket. If you are unable to allocated&#10;    a socket then return a NULL socket_t.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x2b8da334a348" loc="116:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="104:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; Attempts a connection to an address.</short>
          <long>&#10; Attempts a connection to an address.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are attempting a connection with. &#10; @param&#10;    socket_addr_t *addr: the destination address and port where&#10;       you will atempt a connection.&#10; @side Client&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a connection with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x2b8da334bd00" loc="116:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b8da334a0c8" loc="116:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="incoming" ref="0x2b8da3345020" loc="155:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="TCP" ref="0x2b8da3302958"/>
              <typename><typedef-ref name="TCP" ref="0x2b8da3300228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data_TCP" ref="0x2b8da3346cc8" loc="155:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="TCP" ref="0x2b8da3302958"/>
              <typename><typedef-ref name="TCP" ref="0x2b8da3300228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="accept" ref="0x2b8da334fb08" loc="58:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="46:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; Checks to see if there are socket connections to connect to and&#10; if there is one, connect to it.</short>
          <long>&#10; Checks to see if there are socket connections to connect to and&#10; if there is one, connect to it.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting an accept. remember, only do on listen. &#10; @side Server&#10; @return socket_t - returns a new socket if the connection is&#10;    accepted. this socket is a copy of the server socket but with&#10;    a destination associated with the destination address and port.&#10;    if not return a null socket.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x2b8da334f898" loc="58:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8da334e698" loc="75:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="60:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; Write to the socket from a buffer.</short>
          <long>&#10; Write to the socket from a buffer. This data will eventually be&#10; transmitted through your TCP implimentation.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting a write.&#10; @param&#10;    uint8_t *buff: the buffer data that you are going to wrte from.&#10; @param&#10;    uint16_t bufflen: The amount of data that you are trying to&#10;       submit.&#10; @Side For your project, only client side. This could be both though.&#10; @return uint16_t - return the amount of data you are able to write&#10;    from the pass buffer. This may be shorter then bufflen&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x2b8da334e428" loc="75:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNodeSocket" ref="0x2b8da3347df0" loc="151:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x2b8da3347b80" loc="151:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x2b8da334ae08" loc="127:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <documentation loc="118:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
          <short>&#10; Closes the socket.</short>
          <long>&#10; Closes the socket.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are closing. &#10; @side Client/Server&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a closure with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x2b8da334ab98" loc="127:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNodeSocket" ref="0x2b8da3346530" loc="153:/home/luis/workspace/Project0/src/lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b8da3435420" loc="41:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da3435420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b8da342ba40" loc="74:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8da342dd88" loc="58:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8da3435cd8" loc="48:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da3435420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8da342c4c0" loc="62:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8da342a1d8" loc="80:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8da342d648" loc="54:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da3435420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b8da342d3d8" loc="54:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da3435420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8da342cbb8" loc="65:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8da342b328" loc="68:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/luis/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b8da30fd020" loc="78:/home/luis/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/luis/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
              <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da30ff668" loc="78:/home/luis/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b8da30ff990" loc="78:/home/luis/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8da30ffca0" loc="78:/home/luis/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketInfo" loc="1:/home/luis/workspace/Project0/src/lib/interfaces/PacketInfo.nc">
      <function command="" provided="0" name="getSeq" ref="0x2b8da3335790" loc="3:/home/luis/workspace/Project0/src/lib/interfaces/PacketInfo.nc">
        <interfacedef-ref qname="PacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incSeq" ref="0x2b8da3335de8" loc="5:/home/luis/workspace/Project0/src/lib/interfaces/PacketInfo.nc">
        <interfacedef-ref qname="PacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="List" loc="11:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
      <documentation loc="1:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8da37e22f0" loc="11:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
          <interfacedef-ref qname="List"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="size" ref="0x2b8da37dcda0" loc="24:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8da37da2e0" loc="26:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x2b8da37dbd10" loc="26:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </variable>
          <variable name="input" ref="0x2b8da37da060" loc="26:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="front" ref="0x2b8da37de9d8" loc="21:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b8da37dc700" loc="23:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8da37db6c0" loc="25:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x2b8da37db450" loc="25:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delete" ref="0x2b8da37dabc0" loc="27:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x2b8da37da950" loc="27:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pushback" ref="0x2b8da37e2d28" loc="17:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <documentation loc="12:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
          <short>&#10; Put value into the end of the list.</short>
          <long>&#10; Put value into the end of the list.&#10;&#10; @param input - data to be inserted&#10;</long>
        </documentation>
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b8da37e2ab8" loc="17:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="popfront" ref="0x2b8da37de378" loc="20:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="popback" ref="0x2b8da37dfcd0" loc="19:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pushfront" ref="0x2b8da37df660" loc="18:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b8da37df3f0" loc="18:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="back" ref="0x2b8da37dc070" loc="22:/home/luis/workspace/Project0/src/dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da37e22f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x2b8da309e020" loc="44:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x2b8da30a0c98" loc="44:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x2b8da309ddf8" loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x2b8da1ebf640"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x2b8da309d4f0" loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x2b8da309d828" loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8da309db68" loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x2b8da1ebf640"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x2b8da309cb28" loc="49:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b8da309c490" loc="48:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x2b8da30a05f8" loc="43:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8da309ee10" loc="46:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x2b8da309e760" loc="45:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Flooding" loc="3:/home/luis/workspace/Project0/src/lib/interfaces/Flooding.nc">
      <function command="" provided="0" name="receive" ref="0x2b8da33264f0" loc="5:/home/luis/workspace/Project0/src/lib/interfaces/Flooding.nc">
        <interfacedef-ref qname="Flooding"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3326280" loc="5:/home/luis/workspace/Project0/src/lib/interfaces/Flooding.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="CheckSent" ref="0x2b8da33254f8" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/Flooding.nc">
        <interfacedef-ref qname="Flooding"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8da3326de8" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/Flooding.nc">
        <interfacedef-ref qname="Flooding"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3326b78" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/Flooding.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8da33e97b8" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8da33e97b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8da33e99e8" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33e99e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b8da34212a8" loc="64:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8da33e99e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b8da3420328" loc="76:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b8da3421ac0" loc="71:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b8da3420a18" loc="82:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b8da2f33e28" loc="44:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b8da2f32520" loc="45:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b8da2f330d8" loc="42:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b8da2f31328" loc="47:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8da2f33778" loc="43:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b8da2f32bd8" loc="46:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8da2f35378" loc="40:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b8da2f359e8" loc="41:/home/luis/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b8da30f2cd0" loc="59:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da30f2a60" loc="59:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b8da310b020" loc="71:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da310ccb0" loc="71:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b8da310a108" loc="85:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da310be28" loc="85:/home/luis/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x2b8da31abcc8" loc="48:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x2b8da2ac84f8"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b8da31ae970" loc="48:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x2b8da31aecf0" loc="49:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b8da31ab060" loc="50:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x2b8da31ab3d8" loc="51:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x2b8da2ac84f8"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x2b8da31ab6d0" loc="52:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x2b8da31aba08" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x2b8da31a75b8" loc="60:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da31a7348" loc="60:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x2b8da31aac78" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x2b8da31a93a0" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x2b8da31aa5b0" loc="55:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b8da31aa340" loc="55:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x2b8da31a9c80" loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da31a9a10" loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x2b8da31a6020" loc="61:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da31a7c80" loc="61:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighbor" loc="3:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
      <function command="" provided="0" name="reply" ref="0x2b8da3322588" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
        <interfacedef-ref qname="Neighbor"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3322318" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b8da3329bf8" loc="5:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
        <interfacedef-ref qname="Neighbor"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3329988" loc="5:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startDisc" ref="0x2b8da3359020" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
        <interfacedef-ref qname="Neighbor"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3322c38" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendNeighbors" ref="0x2b8da3359da0" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
        <interfacedef-ref qname="Neighbor"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="printLS" ref="0x2b8da3357da0" loc="17:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
        <interfacedef-ref qname="Neighbor"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addLS" ref="0x2b8da33576f8" loc="15:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
        <interfacedef-ref qname="Neighbor"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3357488" loc="15:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="print" ref="0x2b8da33596b8" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/Neighbor.nc">
        <interfacedef-ref qname="Neighbor"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8da312d2f0" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x2b8da31329c8" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x2b8da3132d28" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8da312d060" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x2b8da312b6f0" loc="85:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da312b480" loc="85:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8da312de50" loc="69:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da312dbe0" loc="69:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8da312ccb0" loc="76:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da312c708" loc="76:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8da312ca30" loc="76:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x2b8da3129118" loc="87:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da312be78" loc="87:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b8da3407680" loc="55:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8da3407680"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b8da343ccf0" loc="98:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b8da343ee20" loc="87:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8da3440020" loc="61:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8da3407680"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b8da343b690" loc="104:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b8da343b420" loc="104:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b8da343be10" loc="110:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8da343f7f8" loc="75:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b8da343f0d8" loc="70:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8da343c5c8" loc="93:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8da3440958" loc="67:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8da3407680"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b8da34406e8" loc="67:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8da3407680"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8da343e020" loc="78:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8da343e708" loc="81:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b8da31133b0" loc="177:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b8da2dc8968"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8da3113140" loc="177:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b8da311c290" loc="88:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8da311c020" loc="88:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b8da311f7a8" loc="68:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b8da311d290" loc="78:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8da311d020" loc="78:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b8da3119a28" loc="121:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8da3119470" loc="121:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8da31197a8" loc="121:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b8da311b5d8" loc="103:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8da311b020" loc="103:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8da311b358" loc="103:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b8da3116020" loc="147:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8da3118cf8" loc="147:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b8da31142a0" loc="162:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8da3116ce8" loc="162:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b8da3114020" loc="162:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b8da3117bf8" loc="136:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8da3117988" loc="136:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b8da31117b8" loc="187:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b8da2dc8968"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8da3111208" loc="187:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
                <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b8da3111538" loc="187:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b8da2dc8968"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b8da3110560" loc="195:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/luis/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b8da2dc8968"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/luis/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/luis/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b8da27fe328" loc="57:/home/luis/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/luis/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b8da2959258" loc="72:/home/luis/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/luis/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b8da27fea40" loc="65:/home/luis/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/luis/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommandHandler" loc="3:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
      <function event="" provided="0" name="setChatClient" ref="0x2b8da332d6e8" loc="14:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="client_port" ref="0x2b8da332e6e0" loc="14:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_addr" ref="0x2b8da332ea30" loc="14:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_port" ref="0x2b8da332ed80" loc="14:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="size" ref="0x2b8da332d0c8" loc="14:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b8da332d438" loc="14:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppClient" ref="0x2b8da332a460" loc="17:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b8da3338a90" loc="4:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8da3338820" loc="4:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
                <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="printLinkState" ref="0x2b8da3332b90" loc="10:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printNeighbors" ref="0x2b8da3334e10" loc="8:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printDistanceVector" ref="0x2b8da3331290" loc="11:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestClient" ref="0x2b8da332e020" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="client_port" ref="0x2b8da33302b0" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_addr" ref="0x2b8da3330600" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_port" ref="0x2b8da3330950" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="transfer" ref="0x2b8da3330ca8" loc="13:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestServer" ref="0x2b8da3331bc0" loc="12:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="server_port" ref="0x2b8da3331950" loc="12:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppServer" ref="0x2b8da332cd80" loc="16:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printRouteTable" ref="0x2b8da33324e8" loc="9:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="ping" ref="0x2b8da3334768" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destination" ref="0x2b8da3334178" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x2b8da33344e8" loc="7:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="closeClient" ref="0x2b8da332c6e8" loc="15:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="client_port" ref="0x2b8da332dd90" loc="15:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_addr" ref="0x2b8da332c108" loc="15:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
          <variable name="dest_port" ref="0x2b8da332c458" loc="15:/home/luis/workspace/Project0/src/lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8da32fc338" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8da32fc338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b8da32f5020" loc="136:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8da32fa710" loc="83:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b8da32f75b8" loc="114:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b8da32f7020" loc="114:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b8da32f7338" loc="114:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b8da32f87b8" loc="98:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b8da32f4020" loc="151:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b8da32f5740" loc="144:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b8da32f8020" loc="92:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b8da32fce08" loc="64:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b8da32fcb98" loc="64:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b8da32f65b8" loc="129:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b8da32f6020" loc="129:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b8da32f6338" loc="129:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b8da32fb8a0" loc="73:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b8da32fb630" loc="73:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8da32fa070" loc="78:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <struct loc="44:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.h" ref="0x2b8da2e440f8" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2b8da2e442f8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="82:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33e7628" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="101:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33e4550" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x2b8da33e4750" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x2b8da33e4800" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x2b8da33e48b0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x2b8da33e4960" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x2b8da33e4a10" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="bnd" loc="9:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec0c00" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x2b8da1ec10a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x2b8da1ec1150" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <nx_struct name="socket_addr_t" loc="28:/home/luis/workspace/Project0/src/socket.h" ref="0x2b8da2e57178" defined="" size="I:6" alignment="I:1">
      <field name="srcPort" ref="0x2b8da2e57bd0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="destPort" ref="0x2b8da2e57c80" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="srcAddr" ref="0x2b8da2e57d30" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
      <field name="destAddr" ref="0x2b8da2e57de0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="234:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33cc020" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x2b8da33cc220" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x2b8da33cc2d0" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b8da33cc380" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x2b8da33cc430" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x2b8da33cc4e0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="170:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33d7d08" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x2b8da33d7f08" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x2b8da33d6020" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x2b8da33d60d0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x2b8da33d6180" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b8da33d6230" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x2b8da33d62e0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x2b8da2cd6d00" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x2b8da2cd53e8" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x2b8da27c8020"/></type-tag>
      </field>
      <field name="it_value" ref="0x2b8da2cd5498" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x2b8da27c8020"/></type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="18:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h" ref="0x2b8da2dc3d00" defined="" size="I:4" alignment="I:1">
      <field name="strength" ref="0x2b8da2dc2588" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x2b8da27218e8"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x2b8da2dc2638" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x2b8da2dc26e8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="126:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h" ref="0x2b8da2eea078" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="gain_entry" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.h" ref="0x2b8da2c60d88" defined="" size="I:24" alignment="I:8">
      <field name="mote" ref="0x2b8da2c5e590" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x2b8da2c5e640" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x2b8da2c5e6f0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x2b8da2c60d88"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="150:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33d84b8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da33d86b8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da33d8768" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da33d9ab0"/></type-tag>
      </field>
    </union>
    <struct name="sim_gain_noise" loc="3:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c" ref="0x2b8da2c70a88" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x2b8da2c6f0a0" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x2b8da2c6f150" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x2b8da1e37720" size="V:" alignment="V:">
    </attribute>
    <struct loc="84:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x2b8da2794490" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0x2b8da2794690" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0x2b8da2794740" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="timeval" loc="30:/usr/include/x86_64-linux-gnu/bits/time.h" ref="0x2b8da27c8990" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x2b8da27c7020" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x2b8da2784020"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x2b8da27c70d0" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__suseconds_t" ref="0x2b8da2784798"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="230:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27e45d8" defined="" size="I:32" alignment="I:8">
      <field name="__size" ref="0x2b8da27e47d8" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b8da27e4888" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum loc="76:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/tos.h" ref="0x2b8da2ac9698" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nonnull" loc="8:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec01e0" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2b8da1ec0628" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c" ref="0x2b8da2b067f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="number"  loc="NONE" ref="0x2b8da1e33db0" size="V:" alignment="V:">
    </attribute>
    <enum name="socketState" loc="6:/home/luis/workspace/Project0/src/socket.h" ref="0x2b8da2e37160" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="253:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da34034b0" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x2b8da34036b0" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x2b8da3403760" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x2b8da3403810" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x2b8da34038c0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="90:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33e6670" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="node" loc="62:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/heap.c" ref="0x2b8da2b70888" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x2b8da2b70e40" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x2b8da2b70ef0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="14:/home/luis/local/tinyos-2.1.1/tos/types/AM.h" ref="0x2b8da2dc7020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="215:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27e61a8" defined="" size="I:8" alignment="I:8">
      <field name="__size" ref="0x2b8da27e67a8" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b8da27e6858" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <union loc="133:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33dcd48" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da33dcf48" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da33db020" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da33dc3e8"/></type-tag>
      </field>
    </union>
    <nx_struct name="serial_packet" loc="131:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2b8da2ddb3c8" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x2b8da2ddba90" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x2b8da2ddc020"/>
          <typename><typedef-ref name="serial_header_t" ref="0x2b8da2ddb088"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x2b8da2ddbb40" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="104:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f06758" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="132:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f03cb8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="integer"  loc="NONE" ref="0x2b8da1e33b10" size="V:" alignment="V:">
    </attribute>
    <struct loc="134:/usr/include/x86_64-linux-gnu/bits/types.h" ref="0x2b8da2787898" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0x2b8da2787a98" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <union loc="138:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27e2460" defined="" size="I:48" alignment="I:8">
      <field name="__data" ref="0x2b8da27e2660" bit-offset="I:0" size="I:48">
        <type-tag size="I:48" alignment="I:8"><struct-ref ref="0x2b8da27da600"/></type-tag>
      </field>
      <field name="__size" ref="0x2b8da27e2710" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b8da27e27c0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <attribute name="exactlyonce" loc="99:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/tos.h" ref="0x2b8da2af9148" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h" ref="0x2b8da2dd86e8" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x2b8da2dd8bb8" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x2b8da2dc33c8"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x2b8da2dc39b0"/></typename>
        </type-tag>
      </field>
    </union>
    <union name="message_metadata" loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h" ref="0x2b8da2dd70b8" defined="" size="I:4" alignment="I:1">
      <field name="tossim" ref="0x2b8da2dd75b0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x2b8da2dc3d00"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x2b8da2dc2840"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x2b8da1e37078" size="V:" alignment="V:">
      <field name="fn" ref="0x2b8da1e37278" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="drand48_data" loc="412:/usr/include/stdlib.h" ref="0x2b8da27ff158" defined="" size="I:24" alignment="I:8">
      <field name="__x" ref="0x2b8da27fff20" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x2b8da27fd020" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x2b8da27fd0d0" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x2b8da27fd180" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x2b8da27fd230" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="51:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h" ref="0x2b8da1ebe2f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__locale_struct" loc="27:/usr/include/xlocale.h" ref="0x2b8da2747a50" defined="" size="I:232" alignment="I:8">
      <field name="__locales" ref="0x2b8da2745020" bit-offset="I:0" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0x2b8da2747ce0"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x2b8da27450d0" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x2b8da2745180" bit-offset="I:896" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x2b8da2745230" bit-offset="I:960" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x2b8da27452e0" bit-offset="I:1024" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <struct loc="26:/usr/include/_G_config.h" ref="0x2b8da2a3c228" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x2b8da2a3c428" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x2b8da2787020"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x2b8da2a3c4d8" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b8da2a2baa8"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x2b8da2a2a020"/></typename>
        </type-tag>
      </field>
    </struct>
    <struct loc="42:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.h" ref="0x2b8da2e461d8" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2b8da2e463d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2b8da2ddc020" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x2b8da2ddcc18" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2b8da2dc8228"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x2b8da2ddccc8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2b8da2dc8228"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x2b8da2ddcd78" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x2b8da2ddce28" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x2b8da2dc9de0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x2b8da2ddced8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x2b8da2dc98e8"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="54:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h" ref="0x2b8da2effb98" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="75:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33e8878" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="message_header" loc="50:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h" ref="0x2b8da2dd9a78" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x2b8da2dd8198" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x2b8da2dc5020"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x2b8da2dc3088"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x2b8da2dd8248" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x2b8da2ddc020"/>
          <typename><typedef-ref name="serial_header_t" ref="0x2b8da2ddb088"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="120:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f04950" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x2b8da27c8020" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x2b8da27c8630" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x2b8da2784020"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x2b8da27c86e0" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__syscall_slong_t" ref="0x2b8da278ad28"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec32b0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x2b8da1ec35d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_internal_list" loc="75:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27d66d8" defined="" size="I:16" alignment="I:8">
      <field name="__prev" ref="0x2b8da27d5020" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2b8da27d66d8"/></type-tag>
        </type-pointer>
      </field>
      <field name="__next" ref="0x2b8da27d50d0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2b8da27d66d8"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="173:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27e74e0" defined="" size="I:56" alignment="I:8">
      <field name="__data" ref="0x2b8da27e76e0" bit-offset="I:0" size="I:56">
        <type-tag size="I:56" alignment="I:8"><struct-ref ref="0x2b8da27de4c8"/></type-tag>
      </field>
      <field name="__size" ref="0x2b8da27e7790" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b8da27e7840" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum loc="11:/home/luis/workspace/Project0/src/simbuild/micaz/../../packet.h" ref="0x2b8da2e41ae8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="144:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f01020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd_nok" loc="10:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec1750" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x2b8da1ec1b98" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x2b8da1ec1c48" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="196:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33d39b0" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x2b8da33d3bb0" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x2b8da33d3c60" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x2b8da33d3d10" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x2b8da33d3dc0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="211:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33d1280" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="69:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x2b8da2795638" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0x2b8da2795838" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0x2b8da27958e8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0x2b8da2795998" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="timezone" loc="55:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x2b8da2bc3c58" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x2b8da2bc2250" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x2b8da2bc2300" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="312:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33f6c90" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da33f6e90" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da33f6f40" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da33f63e0"/></type-tag>
      </field>
    </union>
    <union name="wait" loc="66:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x2b8da27977d0" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x2b8da2794a58" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0x2b8da2794b08" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da2795638"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0x2b8da2794bb8" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da2794490"/></type-tag>
      </field>
    </union>
    <union loc="90:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27dc1c8" defined="" size="I:40" alignment="I:8">
      <field name="__data" ref="0x2b8da27dc3c8" bit-offset="I:0" size="I:40">
        <type-tag size="I:40" alignment="I:8"><struct-ref name="__pthread_mutex_s" ref="0x2b8da27d5610"/></type-tag>
      </field>
      <field name="__size" ref="0x2b8da27dc478" bit-offset="I:0" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b8da27dc528" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct name="PacketID" loc="4:/home/luis/workspace/Project0/src/packetid.h" ref="0x2b8da2e44780" defined="" size="I:6" alignment="I:2">
      <field name="sequence" ref="0x2b8da2e44f48" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="moteID" ref="0x2b8da2e43020" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="age" ref="0x2b8da2e430d0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="250:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da3403ba0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da3403da0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da3403e50" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da34034b0"/></type-tag>
      </field>
    </union>
    <struct name="sim_event" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.h" ref="0x2b8da2ad3b58" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x2b8da2ae6b08" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x2b8da2ac84f8"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x2b8da2ae6bb8" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x2b8da2ae6c68" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x2b8da2ae6d18" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x2b8da2ae6dc8" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x2b8da2ae6e78" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b8da2ad3b58"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x2b8da2ad1020"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x2b8da2ae6f48" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b8da2ad3b58"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x2b8da2ad1020"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x2b8da2a3ce98" size="V:" alignment="V:">
    </struct>
    <union loc="129:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27dcdf8" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x2b8da27db020" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b8da27db0d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <nx_struct name="tossim_footer" loc="14:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h" ref="0x2b8da2dc33c8" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x2b8da2dc3858" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x2b8da27282f8"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="180:/usr/include/libio.h" ref="0x2b8da2a39360" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_packet.h" ref="0x2b8da2db53c8" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum loc="51:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f0f988" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="25:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h" ref="0x2b8da2e4b658" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="150:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f00a10" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x2b8da2f00c10" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x2b8da2f00cc0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x2b8da2f00d70" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x2b8da2f00e20" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x2b8da2f00ed0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x2b8da2eff020" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="52:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33b2178" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="189:/usr/include/math.h" ref="0x2b8da29ff648" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="41:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.h" ref="0x2b8da1ebd938" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2b8da1ebdb38" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="8:/home/luis/workspace/Project0/src/sendInfo.h" ref="0x2b8da32d0a78" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="315:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33f63e0" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x2b8da33f65e0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x2b8da33f6690" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x2b8da33f6740" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x2b8da33f67f0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x2b8da33f68a0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x2b8da33f6950" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b8da33f6a00" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="flagtype" loc="4:/home/luis/workspace/Project0/src/TCP.h" ref="0x2b8da3304e70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_metadata" loc="136:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2b8da2dd9150" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x2b8da2dd95d8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="91:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x2b8da2bd8d30" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="97:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/tos.h" ref="0x2b8da2afaa48" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="94:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f06020" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x2b8da2f06220" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x2b8da2f062d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x2b8da2f06380" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="63:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33b0480" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="94:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2b8da2dc19a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="167:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33d6570" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da33d6770" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da33d6820" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da33d7d08"/></type-tag>
      </field>
    </union>
    <enum loc="19:/home/luis/workspace/Project0/src/socket.h" ref="0x2b8da2e59878" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="21:/usr/include/_G_config.h" ref="0x2b8da2a2a710" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x2b8da2a2a910" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x2b8da2788b00"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x2b8da2a2a9c0" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b8da2a2baa8"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x2b8da2a2a020"/></typename>
        </type-tag>
      </field>
    </struct>
    <attribute name="hwevent"  loc="NONE" ref="0x2b8da1e36850" size="V:" alignment="V:">
    </attribute>
    <struct name="_IO_FILE" loc="245:/usr/include/libio.h" ref="0x2b8da2a2c078" defined="" size="I:216" alignment="I:8">
      <field name="_flags" ref="0x2b8da2a33480" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x2b8da2a33530" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x2b8da2a335e0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x2b8da2a33690" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x2b8da2a33740" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x2b8da2a337f0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x2b8da2a338a0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x2b8da2a33950" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x2b8da2a33a00" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x2b8da2a33ab0" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x2b8da2a33b60" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x2b8da2a33c10" bit-offset="I:704" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x2b8da2a33cc0" bit-offset="I:768" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x2b8da2a3a658"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x2b8da2a33e70" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x2b8da2a33f20" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x2b8da2a45020" bit-offset="I:928" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x2b8da2a450d0" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x2b8da2788b00"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x2b8da2a45180" bit-offset="I:1024" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x2b8da2a45230" bit-offset="I:1040" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x2b8da2a452e0" bit-offset="I:1048" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x2b8da2a45390" bit-offset="I:1088" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x2b8da2a3a350"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x2b8da2a45440" bit-offset="I:1152" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x2b8da2787020"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x2b8da2a454f0" bit-offset="I:1216" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x2b8da2a455a0" bit-offset="I:1280" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x2b8da2a45650" bit-offset="I:1344" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x2b8da2a45900" bit-offset="I:1408" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x2b8da2a459b0" bit-offset="I:1472" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x2b8da1ebf640"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x2b8da2a45a60" bit-offset="I:1536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x2b8da2a45b10" bit-offset="I:1568" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="pthread_attr_t" loc="63:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27d8828" defined="" size="I:56" alignment="I:8">
      <field name="__size" ref="0x2b8da27d8e80" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b8da27d8f30" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <union loc="236:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27e31b0" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x2b8da27e33b0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b8da27e3460" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="hashtable" ref="0x2b8da2af96c0" size="V:" alignment="V:">
    </struct>
    <struct name="heap" loc="61:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/heap.h" ref="0x2b8da2b62b68" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x2b8da2b5f2a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x2b8da2b5f358" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x2b8da2b5f408" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="271:/usr/include/inttypes.h" ref="0x2b8da1ed9b98" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x2b8da1ed9d98" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x2b8da1ed9e48" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x2b8da1e379c0" size="V:" alignment="V:">
    </attribute>
    <struct loc="176:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27de4c8" defined="" size="I:56" alignment="I:8">
      <field name="__lock" ref="0x2b8da27de6c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x2b8da27de778" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x2b8da27de828" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x2b8da27de8d8" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x2b8da27de988" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x2b8da27dea38" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer" ref="0x2b8da27deae8" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__shared" ref="0x2b8da27deb98" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__pad1" ref="0x2b8da27dec48" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__pad2" ref="0x2b8da27decf8" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__flags" ref="0x2b8da27deda8" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="26:/home/luis/local/tinyos-2.1.1/tos/types/AM.h" ref="0x2b8da2dc75e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_marker" loc="160:/usr/include/libio.h" ref="0x2b8da2a3a658" defined="" size="I:24" alignment="I:8">
      <field name="_next" ref="0x2b8da2a3aed8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x2b8da2a3a658"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x2b8da2a39020" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x2b8da2a390d0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="pack" loc="18:/home/luis/workspace/Project0/src/simbuild/micaz/../../packet.h" ref="0x2b8da2e40a88" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0x2b8da2e3f9b8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x2b8da2e3fa68" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x2b8da2e3fb18" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
      <field name="TTL" ref="0x2b8da2e3fbc8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="protocol" ref="0x2b8da2e3fc78" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x2b8da2e3fd28" bit-offset="I:64" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="43:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2ee98e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f032e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="138:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f02670" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sendInfo" loc="12:/home/luis/workspace/Project0/src/sendInfo.h" ref="0x2b8da3304110" defined="" size="I:32" alignment="I:2">
      <field name="packet" ref="0x2b8da3304888" bit-offset="I:0" size="I:28">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
          <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
        </type-tag>
      </field>
      <field name="src" ref="0x2b8da3304938" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x2b8da33049e8" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="LinkState" loc="4:/home/luis/workspace/Project0/src/lib/modules/../../linkstate.h" ref="0x2b8da37a39a8" defined="" size="I:19" alignment="I:1">
      <field name="size" ref="0x2b8da37e67a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="node" ref="0x2b8da37e6850" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x2b8da37e6900" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="cost" ref="0x2b8da37e69b0" bit-offset="I:24" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="neighbors" ref="0x2b8da37e6a60" bit-offset="I:88" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="random_data" loc="343:/usr/include/stdlib.h" ref="0x2b8da27e9d50" defined="" size="I:48" alignment="I:8">
      <field name="fptr" ref="0x2b8da27e8c08" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2b8da1ecf7e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x2b8da27e8cb8" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2b8da1ecf7e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x2b8da27e8d68" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2b8da1ecf7e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x2b8da27e8e18" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x2b8da27e8ec8" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x2b8da27f0020" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x2b8da27f00d0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2b8da1ecf7e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <struct loc="300:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33f9020" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x2b8da33f9220" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x2b8da33f92d0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x2b8da33f9380" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x2b8da33f9430" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x2b8da33f94e0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x2b8da33f9590" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b8da33f9640" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="87:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2b8da2dc1020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x2b8da2cd7020" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x2b8da2cd6390" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x2b8da2cd6440" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x2b8da2cd64f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x2b8da2cd65a0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x2b8da2cd6650" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x2b8da2cd6700" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x2b8da2cd67b0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x2b8da2cd6860" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x2b8da2cd6910" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x2b8da2cd69c0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x2b8da2cd6a70" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct loc="153:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33d9ab0" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x2b8da33d9cb0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x2b8da33d9d60" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x2b8da33d9e10" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x2b8da33d9ec0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x2b8da33d8020" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x2b8da33d80d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x2b8da33d8180" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x2b8da33d8230" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c" ref="0x2b8da2b06ea0" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x2b8da2b054f0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x2b8da2b055a0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/>
              <typename><typedef-ref name="FILE" ref="0x2b8da2a2c448"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct name="SentTuple" loc="6:/home/luis/workspace/Project0/src/senttuple.h" ref="0x2b8da2e39828" defined="" size="I:30" alignment="I:2">
      <field name="packet" ref="0x2b8da2e39df0" bit-offset="I:0" size="I:28">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
          <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
        </type-tag>
      </field>
      <field name="age" ref="0x2b8da2e39ea0" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="58:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2b8da2f0e3c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="46:/usr/include/ctype.h" ref="0x2b8da29f8020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="123:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33e0e20" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x2b8da33df0a0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x2b8da33df150" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x2b8da33df200" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x2b8da33df2b0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2b8da33df360" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="105:/usr/include/stdlib.h" ref="0x2b8da27a08e0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x2b8da27a0ae0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x2b8da27a0b90" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <union loc="193:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33d2170" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da33d2370" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da33d2420" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da33d39b0"/></type-tag>
      </field>
    </union>
    <struct loc="117:/usr/include/stdlib.h" ref="0x2b8da279f418" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x2b8da279f618" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x2b8da279f6c8" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec4e50" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2b8da1ec51c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="dmemset" loc="15:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec57c8" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x2b8da1ec5c50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x2b8da1ec5d00" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x2b8da1ec5db0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="85:/usr/include/wchar.h" ref="0x2b8da2a2b588" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0x2b8da2a2b788" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x2b8da2a2b838" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <attribute name="atleastonce" loc="98:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/tos.h" ref="0x2b8da2afadb0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="102:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2b8da2dbf850" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="109:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2b8da2dbeb18" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x2b8da2dde418" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x2b8da2dde4c8" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x2b8da2dde578" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x2b8da2dde628" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x2b8da2dde6d8" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x2b8da2dde788" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x2b8da2dde838" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x2b8da2dde8e8" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x2b8da2dde998" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x2b8da2ddea48" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x2b8da2ddeaf8" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="9:/home/luis/workspace/Project0/src/simbuild/micaz/../../protocol.h" ref="0x2b8da2e42118" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="673:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h" ref="0x2b8da2e765b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="98:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33e4ce0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da33e4ee0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da33e2020" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da33e4550"/></type-tag>
      </field>
    </union>
    <enum loc="185:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33d6bf8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="socket_storage_t" loc="35:/home/luis/workspace/Project0/src/socket.h" ref="0x2b8da2e55380" defined="" size="I:10352" alignment="I:4">
      <field name="state" ref="0x2b8da2e51d88" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><enum-ref name="socketState" ref="0x2b8da2e37160"/>
          <typename><typedef-ref name="socketState" ref="0x2b8da2e59638"/></typename>
        </type-tag>
      </field>
      <field name="sockAddr" ref="0x2b8da2e51e38" bit-offset="I:32" size="I:6">
        <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
          <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
        </type-tag>
      </field>
      <field name="sendBuff" ref="0x2b8da2e51ee8" bit-offset="I:80" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="recBuff" ref="0x2b8da2e50020" bit-offset="I:1104" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="dataToSend" ref="0x2b8da2e500d0" bit-offset="I:2128" size="I:5000">
        <type-array elements="I:5000" size="I:5000" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="messageToQuery" ref="0x2b8da2e50180" bit-offset="I:42128" size="I:5000">
        <type-array elements="I:5000" size="I:5000" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="sendWindow" ref="0x2b8da2e50230" bit-offset="I:82128" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="sendWindowSize" ref="0x2b8da2e502e0" bit-offset="I:82208" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="dataToSendSize" ref="0x2b8da2e50390" bit-offset="I:82224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="messageToQuerySize" ref="0x2b8da2e50440" bit-offset="I:82240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="sendBuffSize" ref="0x2b8da2e504f0" bit-offset="I:82256" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="recBuffSize" ref="0x2b8da2e505a0" bit-offset="I:82272" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="lastByteSent" ref="0x2b8da2e50650" bit-offset="I:82288" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="lastByteWritten" ref="0x2b8da2e50800" bit-offset="I:82304" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="lastByteAck" ref="0x2b8da2e508b0" bit-offset="I:82320" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="lastByteRec" ref="0x2b8da2e50960" bit-offset="I:82336" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="lastByteRead" ref="0x2b8da2e50a10" bit-offset="I:82352" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="nextByteExpected" ref="0x2b8da2e50ac0" bit-offset="I:82368" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="nextExpectedSeq" ref="0x2b8da2e50b70" bit-offset="I:82384" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="advWin" ref="0x2b8da2e50c20" bit-offset="I:82400" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x2b8da2e50cd0" bit-offset="I:82416" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="ackseq" ref="0x2b8da2e50d80" bit-offset="I:82432" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="timeOut" ref="0x2b8da2e50e30" bit-offset="I:82448" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="HStimeOut" ref="0x2b8da2e50ee0" bit-offset="I:82464" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="acktimeOut" ref="0x2b8da2e4e020" bit-offset="I:82480" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="packet" ref="0x2b8da2e4e2d0" bit-offset="I:82496" size="I:28">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
          <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
        </type-tag>
      </field>
      <field name="inTimeOut" ref="0x2b8da2e4e380" bit-offset="I:82720" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="inHSTimeOut" ref="0x2b8da2e4e430" bit-offset="I:82736" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="inAckTimeOut" ref="0x2b8da2e4e4e0" bit-offset="I:82752" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="waitingAck" ref="0x2b8da2e4e590" bit-offset="I:82768" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="neverSent" ref="0x2b8da2e4e640" bit-offset="I:82784" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="sending" ref="0x2b8da2e4e6f0" bit-offset="I:82800" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="itimerval" loc="107:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x2b8da2bd6a90" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x2b8da2bd51a8" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x2b8da27c8990"/></type-tag>
      </field>
      <field name="it_value" ref="0x2b8da2bd5258" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x2b8da27c8990"/></type-tag>
      </field>
    </struct>
    <struct loc="43:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.h" ref="0x2b8da2e46940" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2b8da2e46b40" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec3be8" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x2b8da1ec3f08" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="64:/usr/include/x86_64-linux-gnu/sys/select.h" ref="0x2b8da27c5420" defined="" size="I:128" alignment="I:8">
      <field name="__fds_bits" ref="0x2b8da27c5620" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__fd_mask" ref="0x2b8da27c77a8"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sigevent" ref="0x2b8da2cd56b8" size="V:" alignment="V:">
    </struct>
    <struct name="Route" loc="4:/home/luis/workspace/Project0/src/route.h" ref="0x2b8da2e38330" defined="" size="I:6" alignment="I:2">
      <field name="node" ref="0x2b8da2e38ac8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="cost" ref="0x2b8da2e38b78" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
      <field name="nextHop" ref="0x2b8da2e38c28" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="231:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33cc7d8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da33cc9d8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da33cca88" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da33cc020"/></type-tag>
      </field>
    </union>
    <enum loc="301:/usr/include/math.h" ref="0x2b8da29feab8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="50:/usr/include/x86_64-linux-gnu/bits/waitflags.h" ref="0x2b8da277e8f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="one" loc="13:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec4508" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2b8da1ec4850" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="155:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27e1130" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x2b8da27e1330" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2b8da27e13e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="__locale_data" ref="0x2b8da2747ce0" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0x2b8da1e36da0" size="V:" alignment="V:">
    </attribute>
    <nx_struct name="NeighborTuple" loc="4:/home/luis/workspace/Project0/src/neighbortuple.h" ref="0x2b8da2e43588" defined="" size="I:4" alignment="I:1">
      <field name="mote" ref="0x2b8da2e43bc0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
      <field name="age" ref="0x2b8da2e43c70" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="136:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33dc3e8" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x2b8da33dc5e8" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x2b8da33dc698" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x2b8da33dc748" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x2b8da33dc7f8" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x2b8da33dc8a8" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x2b8da33dc958" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x2b8da33dca08" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x2b8da33dcab8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="24:/home/luis/workspace/Project0/src/command.h" ref="0x2b8da32d0438" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="unsafe"  loc="NONE" ref="0x2b8da1e37c60" size="V:" alignment="V:">
    </attribute>
    <struct name="User" loc="4:/home/luis/workspace/Project0/src/users.h" ref="0x2b8da2e4c020" defined="" size="I:168" alignment="I:8">
      <field name="name" ref="0x2b8da2e4c8e0" bit-offset="I:0" size="I:160">
        <type-array elements="I:20" size="I:160" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
            </type-int>
          </type-pointer>
        </type-array>
      </field>
      <field name="namesize" ref="0x2b8da2e4c990" bit-offset="I:1280" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="port" ref="0x2b8da2e4ca40" bit-offset="I:1288" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="TCP" loc="15:/home/luis/workspace/Project0/src/TCP.h" ref="0x2b8da3302958" defined="" size="I:19" alignment="I:1">
      <field name="src_port" ref="0x2b8da3301ba8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="dest_port" ref="0x2b8da3301c58" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x2b8da3301d08" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x2b8da3301db8" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
        </type-int>
      </field>
      <field name="flag" ref="0x2b8da3301e68" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="adv_win" ref="0x2b8da3301f18" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x2b8da3300020" bit-offset="I:64" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="dataSize" ref="0x2b8da33000d0" bit-offset="I:144" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <attribute name="nts" loc="17:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec8020" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2b8da1ec8368" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="_IO_FILE_plus" ref="0x2b8da2a431a0" size="V:" alignment="V:">
    </struct>
    <struct ref="0x2b8da1e314a0" size="V:" alignment="V:">
    </struct>
    <struct name="exception" loc="326:/usr/include/math.h" ref="0x2b8da29fc468" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x2b8da29fcdb0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x2b8da29fce60" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x2b8da29fcf10" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x2b8da29fa020" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x2b8da29fa0d0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c" ref="0x2b8da2b05a48" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x2b8da2b04470" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x2b8da2b04520" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x2b8da2b045d0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x2b8da2b04680" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/>
              <typename><typedef-ref name="FILE" ref="0x2b8da2a2c448"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct loc="140:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27da600" defined="" size="I:48" alignment="I:8">
      <field name="__lock" ref="0x2b8da27da800" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x2b8da27da8b0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x2b8da27da960" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x2b8da27daa10" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x2b8da27daac0" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x2b8da27dab70" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x2b8da27dac20" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x2b8da27dacd0" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0x2b8da1e365b0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h" ref="0x2b8da2be43a0" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x2b8da2be3250" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x2b8da2be3300" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x2b8da2be33b0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x2b8da2be3460" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x2b8da2be3510" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x2b8da2be35c0" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <struct loc="27:/usr/include/x86_64-linux-gnu/bits/sigset.h" ref="0x2b8da27c9440" defined="" size="I:128" alignment="I:8">
      <field name="__val" ref="0x2b8da27c9640" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="63:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c" ref="0x2b8da2b04a18" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="38:/home/luis/workspace/Project0/src/simbuild/micaz/../../packet.h" ref="0x2b8da2e39210" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="macro"  loc="NONE" ref="0x2b8da1e373c8" size="V:" alignment="V:">
      <field name="macro_name" ref="0x2b8da1e375c8" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="51:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h" ref="0x2b8da2be7078" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="12:/home/luis/workspace/Project0/src/command.h" ref="0x2b8da2e49348" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="97:/usr/include/stdlib.h" ref="0x2b8da2793e08" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x2b8da27a00a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x2b8da27a0150" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="tossim_header" loc="6:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h" ref="0x2b8da2dc5020" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x2b8da2dc5c18" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2b8da2dc8228"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x2b8da2dc5cc8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2b8da2dc8228"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x2b8da2dc5d78" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x2b8da2dc5e28" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x2b8da2dc9de0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x2b8da2dc5ed8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x2b8da2dc98e8"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="message_t" loc="14:/home/luis/local/tinyos-2.1.1/tos/types/message.h" ref="0x2b8da2dd7a20" defined="" size="I:41" alignment="I:1">
      <field name="header" ref="0x2b8da2dd6c00" bit-offset="I:0" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x2b8da2dd6cb0" bit-offset="I:56" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x2b8da2dd6d60" bit-offset="I:280" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x2b8da2dd6e10" bit-offset="I:296" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="sim_noise_node_t" loc="73:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h" ref="0x2b8da2be3b38" defined="" size="I:80" alignment="I:8">
      <field name="key" ref="0x2b8da2be11f8" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x2b8da2be12a8" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x2b8da2be1358" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x2b8da2be1408" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x2b8da2be14b8" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x2b8da2af96c0"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x2b8da2be1568" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x2b8da2be1618" bit-offset="I:512" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x2b8da2be16c8" bit-offset="I:544" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x2b8da2be1778" bit-offset="I:576" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="67:/usr/include/stdlib.h" ref="0x2b8da27932a8" defined="" size="I:8" alignment="I:8">
      <field name="__uptr" ref="0x2b8da27934a8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0x2b8da27977d0"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0x2b8da2793558" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <struct loc="82:/usr/include/wchar.h" ref="0x2b8da2a2baa8" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0x2b8da2a2bca8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x2b8da2a2bd58" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2b8da2a2b588"/></type-tag>
      </field>
    </struct>
    <union loc="297:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33f98d8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da33f9ad8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da33f9b88" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da33f9020"/></type-tag>
      </field>
    </union>
    <union loc="120:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2b8da33df5e0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2b8da33df7e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2b8da33df890" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da33e0e20"/></type-tag>
      </field>
    </union>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x2b8da1e36af8" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2b8da1ec6408" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x2b8da1ec6890" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x2b8da1ec6940" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x2b8da1ec69f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_mutex_s" loc="92:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2b8da27d5610" defined="" size="I:40" alignment="I:8">
      <field name="__lock" ref="0x2b8da27d45d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x2b8da27d4680" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x2b8da27d4730" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x2b8da27d47e0" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x2b8da27d4890" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__spins" ref="0x2b8da27d4940" bit-offset="I:160" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__elision" ref="0x2b8da27d49f0" bit-offset="I:176" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__list" ref="0x2b8da27d4aa0" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2b8da27d66d8"/>
          <typename><typedef-ref name="__pthread_list_t" ref="0x2b8da27d5228"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x2b8da2e08c10" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc" ref="0x2b8da3204e78" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc" ref="0x2b8da3180c50" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc" ref="0x2b8da31b1cd0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="66:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc" ref="0x2b8da31fd860" defined="" scoped="" size="I:64" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x2b8da322f250" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x2b8da322f300" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x2b8da2ac84f8"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x2b8da322f3b0" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x2b8da2ac84f8"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x2b8da322f460" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x2b8da322f510" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x2b8da322f5c0" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x2b8da1ecf020"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x2b8da322f670" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x2b8da322f720" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x2b8da322f7d0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
            <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x2b8da322f880" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x2b8da31fd860"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x2b8da31fdcb0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="71:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" ref="0x2b8da35ce6c0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="74:/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" ref="0x2b8da33b3d90" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x2b8da3426c10" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" ref="0x2b8da35c11a8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" ref="0x2b8da35c0778" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x2b8da35c0978" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x2b8da35c0a28" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x2b8da35c0ad8" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x2b8da35c0b88" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x2b8da35c0c38" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="56:/home/luis/workspace/Project0/src/lib/modules/SimpleSendP.nc" ref="0x2b8da3658c30" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="47:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueP.nc" ref="0x2b8da36e5968" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="169:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc" ref="0x2b8da36e3bf0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="126:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc" ref="0x2b8da3724cd0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="55:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc" ref="0x2b8da36db5e0" defined="" scoped="" size="I:8" alignment="I:8">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x2b8da36db7e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
            <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="hashmapEntry" loc="17:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc" ref="0x2b8da3943c28" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="HashmapC"/>
      <field name="key" ref="0x2b8da3942228" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
        </type-int>
      </field>
      <field name="value" ref="0x2b8da39422d8" bit-offset="U:" size="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da38fa4f8"/></type-var>
      </field>
    </struct>
  </tags>
  <variables>
    <variable name="randCM" ref="0x2b8da2ca2290" loc="39:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x2b8da2d78928" loc="283:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x2b8da2bf5480" loc="52:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x2b8da2ca2b30" loc="41:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__timezone" ref="0x2b8da2cdf848" loc="284:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="channelTable" ref="0x2b8da2b02da8" loc="68:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x2b8da2af96c0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x2b8da2d01340" loc="58:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:80000" alignment="I:8">
        <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x2b8da2be3b38"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x2b8da2be18d0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x2b8da2b02968" loc="67:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-array elements="I:284" size="I:4544" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x2b8da2b06ea0"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x2b8da2b056f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x2b8da2cdf140" loc="282:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x2b8da2ca3a70" loc="39:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x2b8da2cdec50" loc="298:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x2b8da2bae9c8" loc="44:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x2b8da2b62b68"/>
        <typename><typedef-ref name="heap_t" ref="0x2b8da2b5f560"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x2b8da2c34318" loc="54:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x2b8da2d04e40" loc="51:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randC" ref="0x2b8da2ca3cd8" loc="39:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x2b8da2d02ce8" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
      </type-int>
    </variable>
    <variable name="csmaLow" ref="0x2b8da2c360c8" loc="47:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x2b8da2c35020" loc="50:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0x2b8da2d02808" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x2b8da2cde8c0" loc="297:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x2b8da2c354c8" loc="51:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x2b8da2a435c0" loc="320:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x2b8da2a431a0"/></type-tag>
    </variable>
    <variable name="randCD" ref="0x2b8da2ca2020" loc="39:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="j97" ref="0x2b8da2ca2800" loc="40:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x2b8da2ac8020" loc="78:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x2b8da2abb4b8" loc="27:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="tzname" ref="0x2b8da2cdfcf8" loc="289:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x2b8da2b70468" loc="58:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x2b8da1e317c8"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x2b8da2a42020" loc="322:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x2b8da2a431a0"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x2b8da2c37c30" loc="46:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x2b8da2c35978" loc="52:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x2b8da2ed8970" loc="51:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x2b8da2c6d088" loc="10:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x2b8da2c70a88"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x2b8da2c6f2a8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x2b8da2a43a40" loc="321:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x2b8da2a431a0"/></type-tag>
    </variable>
    <variable name="csmaInitLow" ref="0x2b8da2c377d8" loc="45:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x2b8da2d023b0" loc="52:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_ticks" ref="0x2b8da2bf50c8" loc="51:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2b8da2ac84f8"/></typename>
      </type-int>
    </variable>
    <variable name="__daylight" ref="0x2b8da2cdf4a8" loc="283:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x2b8da2a51e30" loc="170:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x2b8da2c6f968" loc="9:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:8008" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x2b8da2c60d88"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x2b8da2c5e848"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x2b8da2abb020" loc="26:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x2b8da2a515d0" loc="168:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x2b8da2c161e0" loc="183:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x2b8da2bf57d8" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x2b8da29fc148" loc="313:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x2b8da29feab8"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x2b8da29fdc68"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x2b8da2c6d3c0" loc="11:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x2b8da29ff388" loc="148:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x2b8da2c37368" loc="44:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdout" ref="0x2b8da2a51a00" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x2b8da2c34788" loc="55:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x2b8da2c36578" loc="48:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x2b8da2c35e30" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x2b8da2c36a28" loc="49:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x2b8da2ca25b0" loc="40:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x2b8da2e058d0" loc="66:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x2b8da2e05020" loc="60:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x2b8da2e07bb0" loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x2b8da2e054a8" loc="61:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x2b8da2e05df8" loc="67:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b8da2ad3b58"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2b8da2ad1020"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0x2b8da30a1b18" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b8da2ad3b58"/>
          <typename><typedef-ref name="sim_event_t" ref="0x2b8da2ad1020"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x2b8da30a1420" loc="51:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x2b8da30a1088" loc="50:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x2b8da30a1748" loc="52:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x2b8da3131a48" loc="62:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
        <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x2b8da3131e30" loc="63:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
          <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x2b8da31a4b18" loc="78:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b8da2ad3b58"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2b8da2ad1020"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x2b8da31ad590" loc="70:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x2b8da3210020" loc="294:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x2b8da31ac020" loc="72:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x2b8da31ac3e0" loc="73:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x2b8da31ac788" loc="74:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
          <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x2b8da31ada00" loc="71:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x2b8da31a3020" loc="80:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
        <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x2b8da31a4328" loc="76:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x2b8da31acdc0" loc="75:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x2b8da31a4780" loc="77:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x2b8da3234a18" loc="201:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x2b8da31fe6c0" loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x2b8da3234148" loc="198:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b8da2ad3b58"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2b8da2ad1020"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x2b8da31fd548" loc="62:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2b8da2ac84f8"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x2b8da3232638" loc="203:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x2b8da322fc50" loc="79:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x2b8da31fd860"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x2b8da31fdcb0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x2b8da3232020" loc="202:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
          <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0x2b8da32344c0" loc="200:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x2b8da31fd020" loc="61:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x2b8da31fe360" loc="58:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
          <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x2b8da31fea18" loc="60:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x2b8da32e3138" loc="67:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x2b8da2dc8968"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x2b8da32e7d80" loc="66:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x2b8da32e78f8" loc="65:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="sendPackage" ref="0x2b8da3343938" loc="52:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
        <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
      </type-tag>
    </variable>
    <variable name="fd" ref="0x2b8da33424f8" loc="55:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
      </type-int>
    </variable>
    <variable name="tcp" ref="0x2b8da3372500" loc="59:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="TCP" ref="0x2b8da3302958"/>
          <typename><typedef-ref name="TCP" ref="0x2b8da3300228"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="Seq" ref="0x2b8da3342088" loc="54:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x2b8da3342878" loc="56:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
        <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
      </type-tag>
    </variable>
    <variable name="sockSt" ref="0x2b8da3342c28" loc="57:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:10352" alignment="I:4"><struct-ref name="socket_storage_t" ref="0x2b8da2e55380"/>
        <typename><typedef-ref name="socket_storage_t" ref="0x2b8da2e4e848"/></typename>
      </type-tag>
    </variable>
    <variable name="payday" ref="0x2b8da33435d0" loc="51:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-array elements="I:20" size="I:20" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="checkedNeighbors" ref="0x2b8da3343ca8" loc="53:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="state" ref="0x2b8da3372020" loc="58:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:4" alignment="I:4"><enum-ref name="socketState" ref="0x2b8da2e37160"/>
        <typename><typedef-ref name="socketState" ref="0x2b8da2e59638"/></typename>
      </type-tag>
    </variable>
    <variable name="i" ref="0x2b8da33727d8" loc="60:/home/luis/workspace/Project0/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="base" ref="0x2b8da34269d0" loc="40:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x2b8da3426400" loc="39:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x2b8da34260c8" loc="38:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x2b8da3426648" loc="39:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x2b8da34aa2c0" loc="80:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x2b8da34abda8" loc="74:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2b8da2ac84f8"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x2b8da353b190" loc="480:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b8da2ad3b58"/>
          <typename><typedef-ref name="sim_event_t" ref="0x2b8da2ad1020"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x2b8da34c8940" loc="185:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b8da2ad3b58"/>
          <typename><typedef-ref name="sim_event_t" ref="0x2b8da2ad1020"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x2b8da34b07d0" loc="58:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x2b8da34b0308" loc="57:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x2b8da35b3358" loc="55:/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x2b8da35b36b0" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x2b8da35bf600" loc="69:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x2b8da35bf260" loc="68:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x2b8da35c0778"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x2b8da35c0d90"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sequenceNum" ref="0x2b8da367ea90" loc="27:/home/luis/workspace/Project0/src/lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="pkt" ref="0x2b8da367d498" loc="29:/home/luis/workspace/Project0/src/lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
        <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
      </type-tag>
    </variable>
    <variable name="busy" ref="0x2b8da367d020" loc="28:/home/luis/workspace/Project0/src/lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </variable>
    <variable name="seed" ref="0x2b8da3692c58" loc="52:/home/luis/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
      </type-int>
    </variable>
    <variable name="current" ref="0x2b8da36dbc90" loc="59:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x2b8da36da3a0" loc="60:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x2b8da36db5e0"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x2b8da36db938"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x2b8da36dabe8" loc="61:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="index" ref="0x2b8da3742138" loc="61:/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x2b8da3742a10" loc="62:/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b8da37474c0"/></type-var>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="free" ref="0x2b8da3743da0" loc="60:/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="pool" ref="0x2b8da3741020" loc="63:/home/luis/local/tinyos-2.1.1/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b8da37474c0"/></type-var>
      </type-array>
    </variable>
    <variable name="tail" ref="0x2b8da3761e70" loc="50:/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x2b8da3760308" loc="51:/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x2b8da37616b8" loc="48:/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b8da3766270"/></type-var>
      </type-array>
      <attribute-value>
        <attribute-ref name="one_nok" ref="0x2b8da1ec4e50"/>
        <value-structured>
          <type-tag size="I:4" alignment="I:4"><attribute-ref name="one_nok" ref="0x2b8da1ec4e50"/></type-tag>
        </value-structured>
      </attribute-value>
    </variable>
    <variable name="head" ref="0x2b8da37619f8" loc="49:/home/luis/local/tinyos-2.1.1/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="Seq" ref="0x2b8da37ec3d8" loc="7:/home/luis/workspace/Project0/src/lib/modules/PacketInfoC.nc">
      <component-ref qname="PacketInfoC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="sendPackage" ref="0x2b8da37cf388" loc="26:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <component-ref qname="NeighborC"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
        <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
      </type-tag>
    </variable>
    <variable name="j" ref="0x2b8da37cd820" loc="31:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <component-ref qname="NeighborC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="newtuple" ref="0x2b8da37cf730" loc="27:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <component-ref qname="NeighborC"/>
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="NeighborTuple" ref="0x2b8da2e43588"/>
        <typename><typedef-ref name="NeighborTuple" ref="0x2b8da2e43dc8"/></typename>
      </type-tag>
    </variable>
    <variable name="Seq" ref="0x2b8da37cd1d0" loc="30:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <component-ref qname="NeighborC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="updated" ref="0x2b8da37cda98" loc="31:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <component-ref qname="NeighborC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="payday" ref="0x2b8da37cf020" loc="24:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <component-ref qname="NeighborC"/>
      <type-array elements="I:20" size="I:20" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="newls" ref="0x2b8da37cfac8" loc="28:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <component-ref qname="NeighborC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="LinkState" ref="0x2b8da37a39a8"/>
          <typename><typedef-ref name="LinkState" ref="0x2b8da37e6bb8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="newls2" ref="0x2b8da37cfe30" loc="29:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <component-ref qname="NeighborC"/>
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="LinkState" ref="0x2b8da37a39a8"/>
        <typename><typedef-ref name="LinkState" ref="0x2b8da37e6bb8"/></typename>
      </type-tag>
    </variable>
    <variable name="i" ref="0x2b8da37cd5e0" loc="31:/home/luis/workspace/Project0/src/lib/modules/NeighborC.nc">
      <component-ref qname="NeighborC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="container" ref="0x2b8da381b0c8" loc="20:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8da3822020"/></type-var>
      </type-array>
    </variable>
    <variable name="MAX_SIZE" ref="0x2b8da381cab8" loc="18:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x2b8da381b418" loc="21:/home/luis/workspace/Project0/src/dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="sendPackage" ref="0x2b8da3866020" loc="25:/home/luis/workspace/Project0/src/lib/modules/FloodingC.nc">
      <component-ref qname="FloodingC"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
        <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
      </type-tag>
    </variable>
    <variable name="newpackid" ref="0x2b8da38663a0" loc="26:/home/luis/workspace/Project0/src/lib/modules/FloodingC.nc">
      <component-ref qname="FloodingC"/>
      <type-tag size="I:6" alignment="I:2"><struct-ref name="PacketID" ref="0x2b8da2e44780"/>
        <typename><typedef-ref name="PacketID" ref="0x2b8da2e43228"/></typename>
      </type-tag>
    </variable>
    <variable name="newsent" ref="0x2b8da3866710" loc="27:/home/luis/workspace/Project0/src/lib/modules/FloodingC.nc">
      <component-ref qname="FloodingC"/>
      <type-tag size="I:30" alignment="I:2"><struct-ref name="SentTuple" ref="0x2b8da2e39828"/>
        <typename><typedef-ref name="SentTuple" ref="0x2b8da2e38020"/></typename>
      </type-tag>
    </variable>
    <variable name="newneigh" ref="0x2b8da3866ab8" loc="28:/home/luis/workspace/Project0/src/lib/modules/FloodingC.nc">
      <component-ref qname="FloodingC"/>
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="NeighborTuple" ref="0x2b8da2e43588"/>
        <typename><typedef-ref name="NeighborTuple" ref="0x2b8da2e43dc8"/></typename>
      </type-tag>
    </variable>
    <variable name="i" ref="0x2b8da3866db0" loc="30:/home/luis/workspace/Project0/src/lib/modules/FloodingC.nc">
      <component-ref qname="FloodingC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="key" ref="0x2b8da38ad360" loc="35:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
      </type-int>
    </variable>
    <variable name="newpackid" ref="0x2b8da38ada30" loc="37:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-tag size="I:6" alignment="I:2"><struct-ref name="PacketID" ref="0x2b8da2e44780"/>
        <typename><typedef-ref name="PacketID" ref="0x2b8da2e43228"/></typename>
      </type-tag>
    </variable>
    <variable name="route" ref="0x2b8da38af4a0" loc="31:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-tag size="I:6" alignment="I:2"><struct-ref name="Route" ref="0x2b8da2e38330"/>
        <typename><typedef-ref name="Route" ref="0x2b8da2e38d80"/></typename>
      </type-tag>
    </variable>
    <variable name="neighbor" ref="0x2b8da38afb48" loc="33:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="newsent" ref="0x2b8da38adda0" loc="38:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-tag size="I:30" alignment="I:2"><struct-ref name="SentTuple" ref="0x2b8da2e39828"/>
        <typename><typedef-ref name="SentTuple" ref="0x2b8da2e38020"/></typename>
      </type-tag>
    </variable>
    <variable name="cost" ref="0x2b8da38ad6b0" loc="36:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="next" ref="0x2b8da38af168" loc="30:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-tag size="I:6" alignment="I:2"><struct-ref name="Route" ref="0x2b8da2e38330"/>
        <typename><typedef-ref name="Route" ref="0x2b8da2e38d80"/></typename>
      </type-tag>
    </variable>
    <variable name="newls" ref="0x2b8da38b0e10" loc="29:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="LinkState" ref="0x2b8da37a39a8"/>
        <typename><typedef-ref name="LinkState" ref="0x2b8da37e6bb8"/></typename>
      </type-tag>
    </variable>
    <variable name="i" ref="0x2b8da38b0ab0" loc="28:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="route2" ref="0x2b8da38af7e0" loc="32:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-tag size="I:6" alignment="I:2"><struct-ref name="Route" ref="0x2b8da2e38330"/>
        <typename><typedef-ref name="Route" ref="0x2b8da2e38d80"/></typename>
      </type-tag>
    </variable>
    <variable name="keys" ref="0x2b8da38ad020" loc="34:/home/luis/workspace/Project0/src/lib/modules/ShortestPathC.nc">
      <component-ref qname="ShortestPathC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
        </type-int>
      </type-pointer>
    </variable>
    <variable name="numofVals" ref="0x2b8da3940128" loc="24:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="HASH_MAX_SIZE" ref="0x2b8da3943798" loc="15:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="map" ref="0x2b8da39428c0" loc="22:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-tag size="U:" alignment="U:"><struct-ref name="hashmapEntry" scoped="" ref="0x2b8da3943c28"/>
          <typename><typedef-ref name="hashmapEntry" scoped="" ref="0x2b8da3942430"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="keys" ref="0x2b8da3942d38" loc="23:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="dataToSend" ref="0x2b8da397dae8" loc="38:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sendPackage" ref="0x2b8da3980020" loc="27:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
        <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
      </type-tag>
    </variable>
    <variable name="recTCP" ref="0x2b8da397d658" loc="37:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="TCP" ref="0x2b8da3302958"/>
          <typename><typedef-ref name="TCP" ref="0x2b8da3300228"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="nodeFD" ref="0x2b8da3980b00" loc="30:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
      </type-int>
    </variable>
    <variable name="addrTMP" ref="0x2b8da397e230" loc="32:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
        <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
      </type-tag>
    </variable>
    <variable name="Seq" ref="0x2b8da397e958" loc="34:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="sockSt" ref="0x2b8da397e5e0" loc="33:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-tag size="I:10352" alignment="I:4"><struct-ref name="socket_storage_t" ref="0x2b8da2e55380"/>
        <typename><typedef-ref name="socket_storage_t" ref="0x2b8da2e4e848"/></typename>
      </type-tag>
    </variable>
    <variable name="sock" ref="0x2b8da3980e50" loc="31:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
      </type-int>
    </variable>
    <variable name="dataToSendSize" ref="0x2b8da397c020" loc="39:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="payday" ref="0x2b8da3981b98" loc="26:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-array elements="I:20" size="I:20" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="i" ref="0x2b8da397d2f8" loc="36:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="nodeSocket" ref="0x2b8da39803f8" loc="28:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-tag size="I:10352" alignment="I:4"><struct-ref name="socket_storage_t" ref="0x2b8da2e55380"/>
        <typename><typedef-ref name="socket_storage_t" ref="0x2b8da2e4e848"/></typename>
      </type-tag>
    </variable>
    <variable name="nodeAddr" ref="0x2b8da39807a0" loc="29:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
        <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
      </type-tag>
    </variable>
    <variable name="TCP_Seq" ref="0x2b8da397ee20" loc="35:/home/luis/workspace/Project0/src/lib/modules/TransportC.nc">
      <component-ref qname="TransportC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="readBuffSize" ref="0x2b8da3ad1238" loc="28:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
    <variable name="user2" ref="0x2b8da3ad2960" loc="26:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-tag size="I:168" alignment="I:8"><struct-ref name="User" ref="0x2b8da2e4c020"/>
        <typename><typedef-ref name="User" ref="0x2b8da2e4cb98"/></typename>
      </type-tag>
    </variable>
    <variable name="fd" ref="0x2b8da3ad38b0" loc="23:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
      </type-int>
    </variable>
    <variable name="messageToSend" ref="0x2b8da3ad16e8" loc="29:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-array elements="I:150" size="I:150" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="messageToSendSize" ref="0x2b8da3ad1aa8" loc="30:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x2b8da3ad2020" loc="24:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
        <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
      </type-tag>
    </variable>
    <variable name="sock" ref="0x2b8da3ad3b10" loc="23:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
      </type-int>
    </variable>
    <variable name="sockSt" ref="0x2b8da3ad23d0" loc="25:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-tag size="I:10352" alignment="I:4"><struct-ref name="socket_storage_t" ref="0x2b8da2e55380"/>
        <typename><typedef-ref name="socket_storage_t" ref="0x2b8da2e4e848"/></typename>
      </type-tag>
    </variable>
    <variable name="user" ref="0x2b8da3ad26f8" loc="26:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-tag size="I:168" alignment="I:8"><struct-ref name="User" ref="0x2b8da2e4c020"/>
        <typename><typedef-ref name="User" ref="0x2b8da2e4cb98"/></typename>
      </type-tag>
    </variable>
    <variable name="readBuffer" ref="0x2b8da3ad2e48" loc="27:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-array elements="I:5000" size="I:5000" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="i" ref="0x2b8da3ad1dd8" loc="31:/home/luis/workspace/Project0/src/lib/modules/ApplicationC.nc">
      <component-ref qname="ApplicationC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x2b8da2eb0900" loc="1075:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x2b8da2e9fc58" loc="943:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x2b8da2ecd928" loc="1132:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x2b8da2eb2020" loc="1058:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x2b8da2f09b58" loc="85:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x2b8da2e65a38" loc="140:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x2b8da2e69020" loc="81:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x2b8da2e87020" loc="786:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x2b8da2ed8328" loc="1299:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x2b8da2f02070" loc="133:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x2b8da33cf8a0" loc="222:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x2b8da2f0ab38" loc="80:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x2b8da2e6f620" loc="705:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x2b8da2ea1920" loc="924:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x2b8da2ecec40" loc="1126:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x2b8da2ec9328" loc="1154:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x2b8da2ea2950" loc="919:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x2b8da2ec5950" loc="1182:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x2b8da2ed3630" loc="1093:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x2b8da2ed18f0" loc="1106:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x2b8da2ea8020" loc="876:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x2b8da2ea4020" loc="902:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x2b8da2dbf5d0" loc="98:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x2b8da2e72920" loc="687:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x2b8da2ea8c78" loc="882:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x2b8da2ec2938" loc="961:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x2b8da277ead0" loc="52:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x2b8da2e8b320" loc="763:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x2b8da2e91c88" loc="730:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x2b8da2edc938" loc="1275:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x2b8da29fee38" loc="303:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="SOCK_TIME_WAIT" ref="0x2b8da2e59020" loc="15:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x2b8da33cea08" loc="227:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x2b8da2eab328" loc="858:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x2b8da2ea2c58" loc="920:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x2b8da33ce338" loc="225:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x2b8da2f0d670" loc="64:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x2b8da2e7e858" loc="269:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x2b8da2e93c40" loc="714:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x2b8da2eae310" loc="839:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x2b8da2a051d8" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x2b8da2e62898" loc="169:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x2b8da2e9f630" loc="939:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x2b8da2f0fce8" loc="52:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x2b8da2eccbe0" loc="1138:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x2b8da2ec7310" loc="1166:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x2b8da2e7c498" loc="283:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x2b8da2ec2020" loc="956:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x2b8da2ec38f0" loc="1194:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x2b8da2ee4020" loc="1222:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PROTOCOL_NAME" ref="0x2b8da2e42e80" loc="13:/home/luis/workspace/Project0/src/simbuild/micaz/../../protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x2b8da33b1778" loc="58:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x2b8da2ead630" loc="847:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x2b8da2ed4628" loc="1086:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x2b8da2e72020" loc="684:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x2b8da2e7bde0" loc="298:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x2b8da2e8c948" loc="760:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x2b8da2e83928" loc="817:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x2b8da2ebb328" loc="1004:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x2b8da33d06a0" loc="217:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x2b8da2e6d3e0" loc="36:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x2b8da2eaec10" loc="844:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x2b8da2ee5938" loc="1218:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x2b8da2ee0020" loc="1246:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x2b8da2e9d648" loc="953:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x2b8da2f057b0" loc="109:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x2b8da33ce020" loc="224:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x2b8da2ea5c50" loc="901:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x2b8da2e62528" loc="166:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x2b8da2eea730" loc="128:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x2b8da33e73a8" loc="78:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x2b8da33e5310" loc="94:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x2b8da2ed0640" loc="1112:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x2b8da33b2810" loc="54:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="SOCK_LAST_ACK" ref="0x2b8da2e59398" loc="16:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x2b8da2e8f650" loc="740:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x2b8da2ed3328" loc="1092:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SOCK_LISTEN" ref="0x2b8da2e377c0" loc="8:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x2b8da2ede340" loc="1261:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x2b8da2a0aa28" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x2b8da2dbe7f0" loc="106:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x2b8da2e6c4b0" loc="47:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x2b8da2e61a60" loc="182:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x2b8da2e636f0" loc="154:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x2b8da2be69b0" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x2b8da2e9ec40" loc="948:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x2b8da2ebb020" loc="1003:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="SYN_ACK" ref="0x2b8da3303458" loc="7:/home/luis/workspace/Project0/src/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="MAX_TTL" ref="0x2b8da2e407a0" loc="14:/home/luis/workspace/Project0/src/simbuild/micaz/../../packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x2b8da2e89958" loc="779:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x2b8da2e84c38" loc="811:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x2b8da2e82600" loc="821:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x2b8da2ede020" loc="1258:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x2b8da2e86320" loc="794:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x2b8da2edbc18" loc="1283:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x2b8da2ebc330" loc="997:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x2b8da2f08988" loc="89:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x2b8da33e6020" loc="85:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x2b8da2e608a8" loc="194:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="CMD_ERROR" ref="0x2b8da32d01f8" loc="21:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x2b8da2e8ac40" loc="773:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x2b8da2e73628" loc="679:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x2b8da2e91960" loc="727:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x2b8da2f0c358" loc="68:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x2b8da2f0cd10" loc="71:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x2b8da2e92c40" loc="721:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x2b8da2dc16a0" loc="89:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x2b8da2eb8910" loc="1025:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x2b8da33d09e8" loc="218:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x2b8da2f01398" loc="145:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x2b8da29fd0f0" loc="304:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x2b8da2a8f320" loc="56:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x2b8da2f016c8" loc="146:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x2b8da2e7ebc8" loc="272:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x2b8da2edd620" loc="1267:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x2b8da2eda930" loc="1289:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x2b8da2eb7020" loc="1027:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x2b8da2eca620" loc="1148:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x2b8da2ec6c20" loc="1176:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x2b8da2ee7320" loc="1204:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x2b8da2ee3930" loc="1232:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x2b8da2e86020" loc="793:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x2b8da2ea0950" loc="933:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x2b8da2ee3020" loc="1227:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x2b8da2e88330" loc="782:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x2b8da2ebf920" loc="980:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x2b8da2edf600" loc="1255:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x2b8da33b2bb0" loc="55:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x2b8da2eb7340" loc="1030:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x2b8da2e6b020" loc="54:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x2b8da2e6d740" loc="39:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x2b8da2e7fdd8" loc="264:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x2b8da2e92328" loc="718:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x2b8da33b1020" loc="56:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x2b8da2e5fdd0" loc="216:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x2b8da2e85638" loc="802:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x2b8da2edb020" loc="1277:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x2b8da2ed9950" loc="1296:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x2b8da2e70020" loc="696:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x2b8da2eab928" loc="860:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x2b8da2ece328" loc="1123:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x2b8da2e5da68" loc="238:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x2b8da2dbfb70" loc="103:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x2b8da2e656e0" loc="139:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x2b8da2eca948" loc="1151:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x2b8da2ed1020" loc="1103:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x2b8da2e66bf8" loc="134:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x2b8da2f029d0" loc="139:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x2b8da2ecf620" loc="1117:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x2b8da2ecbc20" loc="1145:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x2b8da2ec6320" loc="1173:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x2b8da2ee8920" loc="1201:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x2b8da2f023b0" loc="134:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x2b8da33b0020" loc="60:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x2b8da33ce6a0" loc="226:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x2b8da2be5848" loc="60:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x2b8da2e7da40" loc="278:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x2b8da2e90c40" loc="735:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x2b8da2edc020" loc="1272:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x2b8da2edd320" loc="1266:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x2b8da2eda630" loc="1288:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x2b8da2eadc38" loc="849:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="FIN" ref="0x2b8da3303a38" loc="9:/home/luis/workspace/Project0/src/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x2b8da2ead020" loc="845:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x2b8da2ea3938" loc="912:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x2b8da2eea3a0" loc="127:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x2b8da2ea9630" loc="873:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x2b8da2b52020" loc="60:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x2b8da2eb8020" loc="1022:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x2b8da2f0ba60" loc="75:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x2b8da2e7a1d0" loc="301:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x2b8da2e79020" loc="313:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x2b8da2a04020" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x2b8da2eb6c50" loc="1040:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x2b8da2ed4320" loc="1085:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x2b8da2e81020" loc="826:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x2b8da2f04ca0" loc="121:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x2b8da2e5d390" loc="232:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x2b8da2ea6c60" loc="894:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x2b8da2ec1950" loc="968:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x2b8da2e83330" loc="815:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x2b8da2e696f0" loc="87:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x2b8da2e6f928" loc="706:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x2b8da2ec4938" loc="1187:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x2b8da2ee5020" loc="1215:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x2b8da2ee1630" loc="1243:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x2b8da2e61dc0" loc="185:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x2b8da2e61390" loc="176:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x2b8da2e9d328" loc="950:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x2b8da2e7cb60" loc="287:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x2b8da2f0ed18" loc="61:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x2b8da2f0b730" loc="74:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x2b8da2f05188" loc="107:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x2b8da2ee2920" loc="1237:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x2b8da2e621b8" loc="163:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x2b8da2e8e630" loc="745:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x2b8da2e65370" loc="136:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x2b8da2e7e508" loc="268:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5000" name="DATA_TO_SEND_SIZE" ref="0x2b8da2e583a0" loc="22:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x2b8da2e89328" loc="775:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x2b8da2a8f938" loc="58:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x2b8da2f0c9d8" loc="70:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x2b8da2f0b3f0" loc="73:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x2b8da2be7418" loc="52:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x2b8da2f09828" loc="84:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x2b8da2e83c10" loc="818:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x2b8da2ed5948" loc="1082:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x2b8da2e9e328" loc="945:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x2b8da2ecc020" loc="1134:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x2b8da2ec8620" loc="1162:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x2b8da2e647f0" loc="146:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x2b8da2e7f020" loc="254:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="CMD_PING" ref="0x2b8da2e49618" loc="13:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x2b8da2e4b960" loc="27:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x2b8da2e684a0" loc="99:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x2b8da2ecd328" loc="1128:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x2b8da2ec9938" loc="1156:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x2b8da2ec4020" loc="1184:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x2b8da2ee6650" loc="1212:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x2b8da2ea3328" loc="910:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x2b8da2e70c30" loc="700:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x2b8da2eb5928" loc="1044:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x2b8da2ebb638" loc="1005:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x2b8da2ed0020" loc="1108:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x2b8da2ebd350" loc="992:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SOCKET_RECEIVE_BUFFER_SIZE" ref="0x2b8da2e58020" loc="21:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x2b8da2e8a328" loc="770:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x2b8da2e71020" loc="689:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x2b8da2eb9c30" loc="1021:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x2b8da33d49f8" loc="189:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x2b8da2ea7330" loc="884:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x2b8da2e8b920" loc="765:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x2b8da2f03020" loc="122:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x2b8da33d0358" loc="216:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x2b8da2ea5328" loc="896:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x2b8da2eae8f0" loc="841:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PROTOCOL_DV" ref="0x2b8da2e41538" loc="15:/home/luis/workspace/Project0/src/simbuild/micaz/../../protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x2b8da2eb4c60" loc="1052:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x2b8da2be7810" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x2b8da2ec2c38" loc="962:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x2b8da2e6ddb8" loc="43:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x2b8da2e9f020" loc="937:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x2b8da2ec78f0" loc="1168:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x2b8da2ee8020" loc="1196:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x2b8da2ee4600" loc="1224:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x2b8da2ee0c30" loc="1252:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x2b8da2ed4c38" loc="1088:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x2b8da2e72620" loc="686:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x2b8da2ebe320" loc="985:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x2b8da2f0a1a8" loc="77:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x2b8da29ff920" loc="191:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="PACKET_MAX_PAYLOAD_SIZE" ref="0x2b8da2e40468" loc="13:/home/luis/workspace/Project0/src/simbuild/micaz/../../packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x2b8da2e7ba68" loc="295:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x2b8da33e69a0" loc="91:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x2b8da2be5140" loc="58:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x2b8da33e83f8" loc="71:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x2b8da2e69dc0" loc="93:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x2b8da2eb1638" loc="1067:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x2b8da2ee0630" loc="1248:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x2b8da2eac320" loc="851:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x2b8da2bd63f0" loc="97:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x2b8da2ea3c38" loc="913:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="CMD_KILL" ref="0x2b8da32d1b38" loc="19:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x2b8da2ea5950" loc="900:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x2b8da2eb2970" loc="1063:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x2b8da2e60c08" loc="197:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ACK" ref="0x2b8da3303748" loc="8:/home/luis/workspace/Project0/src/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x2b8da2ed0c40" loc="1114:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x2b8da2ecb320" loc="1142:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x2b8da2e8c328" loc="756:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5000" name="READ_BUFFER_MAX" ref="0x2b8da2e58708" loc="23:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x2b8da2e8f020" loc="736:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x2b8da2ede940" loc="1263:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x2b8da2e8d948" loc="753:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x2b8da2e8dc50" loc="754:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x2b8da2ea0320" loc="929:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x2b8da2eaac78" loc="870:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x2b8da2e5d708" loc="235:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x2b8da2eaa020" loc="864:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x2b8da2ebd960" loc="994:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x2b8da2e5f710" loc="210:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x2b8da2ebc640" loc="998:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x2b8da2eb3630" loc="1055:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x2b8da2eb0020" loc="1072:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x2b8da2e88c50" loc="785:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x2b8da2e84328" loc="808:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x2b8da2e82310" loc="820:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x2b8da2eda310" loc="1285:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x2b8da2e7a548" loc="304:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x2b8da2e63378" loc="151:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x2b8da2e7b020" loc="288:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x2b8da2e9d938" loc="954:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x2b8da2ed5c48" loc="1083:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x2b8da2ed2320" loc="1097:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x2b8da2f094f8" loc="83:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x2b8da2f05ac8" loc="110:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x2b8da29fe020" loc="197:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x2b8da2ea6330" loc="891:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x2b8da2e91328" loc="723:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x2b8da2eb4020" loc="1046:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x2b8da2e7c140" loc="282:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SOCK_FIN_WAIT" ref="0x2b8da2e5a558" loc="12:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x2b8da2e796f8" loc="319:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x2b8da2ed9020" loc="1291:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x2b8da2ac9928" loc="76:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x2b8da2a8f628" loc="57:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x2b8da2efc3f0" loc="61:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x2b8da2ec5320" loc="1178:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x2b8da2ee7920" loc="1206:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x2b8da2ee2020" loc="1234:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x2b8da2efdb98" loc="58:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x2b8da2e85948" loc="803:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x2b8da33b07a0" loc="64:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x2b8da2e8e938" loc="746:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x2b8da29fd370" loc="305:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x2b8da2e71628" loc="691:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x2b8da2ea4928" loc="905:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SOCKET_SEND_BUFFER_SIZE" ref="0x2b8da2e59bd8" loc="20:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x2b8da2ed3930" loc="1094:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x2b8da2eeaaf8" loc="129:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x2b8da2eb6020" loc="1034:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x2b8da2ecd638" loc="1131:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x2b8da33e6330" loc="86:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x2b8da2e88948" loc="784:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x2b8da2b06b58" loc="48:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x2b8da2e6d070" loc="33:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x2b8da2ed8020" loc="1298:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x2b8da33e5020" loc="93:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x2b8da2e70620" loc="698:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x2b8da2e6f320" loc="704:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PROTOCOL_TCP" ref="0x2b8da2e411f8" loc="14:/home/luis/workspace/Project0/src/simbuild/micaz/../../protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x2b8da2e80878" loc="250:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x2b8da2ea1620" loc="923:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x2b8da2ece938" loc="1125:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x2b8da2ec9020" loc="1153:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x2b8da2ec5648" loc="1181:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x2b8da2ebf020" loc="977:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x2b8da2ec0630" loc="974:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x2b8da2ed1600" loc="1105:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x2b8da2f0bd90" loc="76:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x2b8da2ea8968" loc="881:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x2b8da2e80518" loc="247:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x2b8da2e8b020" loc="762:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x2b8da2e7d020" loc="273:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x2b8da2e7c7f0" loc="284:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x2b8da2e90630" loc="733:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x2b8da2edc630" loc="1274:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SOCK_CLOSED" ref="0x2b8da2e37b00" loc="9:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x2b8da2ea7c50" loc="887:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SOCK_FIN_WAIT2" ref="0x2b8da2e5ac10" loc="14:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x2b8da2f0d978" loc="65:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x2b8da2e93940" loc="713:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x2b8da2ea9c40" loc="875:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x2b8da2be6070" loc="55:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x2b8da2ecc8f0" loc="1137:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x2b8da2ec7020" loc="1165:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x2b8da2a03bd0" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x2b8da2e9dc38" loc="955:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x2b8da2ec3600" loc="1193:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x2b8da2ee5c48" loc="1221:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x2b8da2e7a8c0" loc="307:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x2b8da2ead328" loc="846:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x2b8da2e62c08" loc="172:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x2b8da2e86c50" loc="799:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x2b8da2e81620" loc="828:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x2b8da2eaf630" loc="835:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x2b8da2e8d638" loc="752:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x2b8da2eb5328" loc="1042:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x2b8da2e8c648" loc="759:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x2b8da2a06380" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x2b8da2eb7c38" loc="1033:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x2b8da33afb50" loc="69:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x2b8da2e93020" loc="708:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x2b8da2e68b70" loc="105:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x2b8da2ebdc68" loc="995:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x2b8da2ee5630" loc="1217:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x2b8da2ee1c40" loc="1245:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x2b8da2e73020" loc="677:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x2b8da2e73c28" loc="681:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x2b8da2e64b60" loc="149:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x2b8da2f0e708" loc="59:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x2b8da2f06aa8" loc="105:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x2b8da2ed0340" loc="1111:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x2b8da2efc020" loc="59:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x2b8da2e8e020" loc="743:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x2b8da2ed3020" loc="1091:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x2b8da2f0c698" loc="69:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x2b8da2eb2350" loc="1061:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x2b8da2f04198" loc="112:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x2b8da2f091c8" loc="82:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x2b8da2e7f6f0" loc="258:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x2b8da2e9e938" loc="947:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x2b8da2ecc600" loc="1136:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x2b8da2ebcc78" loc="1002:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x2b8da2e65d90" loc="141:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x2b8da2ec8c00" loc="1164:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x2b8da2ec3310" loc="1192:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x2b8da29fd5f0" loc="306:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="CMD_ROUTETABLE_DUMP" ref="0x2b8da32d1140" loc="16:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x2b8da2e87640" loc="790:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x2b8da2edfbe0" loc="1257:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x2b8da2edb928" loc="1282:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x2b8da2ebc020" loc="996:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SEND_BUFFER_SIZE" ref="0x2b8da32d0db8" loc="9:/home/luis/workspace/Project0/src/sendInfo.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="NULL_SOCKET" ref="0x2b8da2e58a48" loc="24:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="CMD_MESSAGE" ref="0x2b8da32d1e78" loc="20:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x2b8da2e8a938" loc="772:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x2b8da2e6a1b8" loc="69:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x2b8da2e92938" loc="720:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x2b8da2eba310" loc="1011:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x2b8da2e73928" loc="680:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x2b8da2e63dc8" loc="160:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x2b8da33d15c8" loc="212:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x2b8da2eeae78" loc="130:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x2b8da2a39b38" loc="184:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x2b8da2eca320" loc="1147:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x2b8da2ec6920" loc="1175:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x2b8da2ee7020" loc="1203:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x2b8da2ee3630" loc="1231:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="DATA" ref="0x2b8da3303d38" loc="10:/home/luis/workspace/Project0/src/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x2b8da2e83020" loc="812:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x2b8da2ea0c58" loc="934:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x2b8da2ee8600" loc="1198:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x2b8da2e88640" loc="783:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x2b8da2ebf620" loc="979:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x2b8da2ee4be0" loc="1226:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x2b8da2edf310" loc="1254:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x2b8da2e67a90" loc="119:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x2b8da2eb2c78" loc="1064:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PROTOCOL_LINKSTATE" ref="0x2b8da2e42b28" loc="12:/home/luis/workspace/Project0/src/simbuild/micaz/../../protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x2b8da2efd438" loc="56:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x2b8da2ebfc48" loc="983:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x2b8da33b0b30" loc="65:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x2b8da2eab020" loc="857:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x2b8da2e93340" loc="711:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x2b8da2eb9930" loc="1020:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x2b8da2e84020" loc="807:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x2b8da2e601c8" loc="188:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x2b8da2b52658" loc="62:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x2b8da2e67390" loc="111:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x2b8da2e71c48" loc="695:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x2b8da2eab628" loc="859:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x2b8da2ea2320" loc="915:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x2b8da2ea2648" loc="918:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x2b8da2ed5328" loc="1078:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x2b8da2ece020" loc="1122:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="CMD_TEST_CLIENT" ref="0x2b8da32d14a8" loc="17:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x2b8da2e80be8" loc="253:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x2b8da2f0b0b0" loc="72:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x2b8da2e5ec00" loc="226:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x2b8da2a39868" loc="183:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x2b8da2eb0600" loc="1074:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x2b8da2eba610" loc="1012:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x2b8da2ed2c20" loc="1102:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x2b8da2dbe3f0" loc="105:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x2b8da2efd830" loc="57:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x2b8da2ecf320" loc="1116:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x2b8da2ecb920" loc="1144:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x2b8da2ec6020" loc="1172:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="DATA_ACK" ref="0x2b8da33020b0" loc="11:/home/luis/workspace/Project0/src/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x2b8da2e90938" loc="734:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x2b8da2eddc48" loc="1271:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x2b8da33d0020" loc="215:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x2b8da2edd020" loc="1265:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x2b8da2f06dc0" loc="106:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x2b8da2e92020" loc="717:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x2b8da2ea1c40" loc="927:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PROTOCOL_PINGREPLY" ref="0x2b8da2e427a0" loc="11:/home/luis/workspace/Project0/src/simbuild/micaz/../../protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x2b8da2ead938" loc="848:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x2b8da2ea3630" loc="911:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="MAX_TRANSPORT_SIZE" ref="0x2b8da2e58df0" loc="25:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x2b8da2ea9328" loc="872:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x2b8da2b52c90" loc="64:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x2b8da2eb9020" loc="1015:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x2b8da2e82908" loc="822:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x2b8da2f08020" loc="86:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x2b8da2eb0c00" loc="1076:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x2b8da2e6ba88" loc="63:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x2b8da2e79a70" loc="322:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x2b8da33af3d0" loc="67:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x2b8da2ec2630" loc="960:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x2b8da2ec1020" loc="963:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x2b8da2ec0930" loc="975:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x2b8da2ed4020" loc="1084:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x2b8da2f03690" loc="127:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x2b8da2eb4620" loc="1048:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x2b8da277ed40" loc="53:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x2b8da2e5d020" loc="229:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x2b8da2ea6950" loc="893:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x2b8da2e81320" loc="827:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x2b8da2e6abd8" loc="78:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x2b8da2ec8020" loc="1158:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x2b8da2e87340" loc="789:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x2b8da2eafc30" loc="837:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x2b8da2ec4630" loc="1186:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x2b8da2ee6c60" loc="1214:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x2b8da2ebec30" loc="988:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x2b8da2ee1328" loc="1242:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x2b8da33d46a8" loc="188:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x2b8da2e8d020" loc="750:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x2b8da2e9d020" loc="949:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x2b8da2f0d060" loc="62:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x2b8da2ec1320" loc="964:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x2b8da2ec1c50" loc="969:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x2b8da2ee6020" loc="1208:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x2b8da2ee2620" loc="1236:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x2b8da33d1bf8" loc="214:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x2b8da2e85020" loc="800:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x2b8da29fd888" loc="307:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x2b8da2e8e328" loc="744:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x2b8da2eb6620" loc="1036:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x2b8da2e5ddc8" loc="241:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x2b8da2ed2020" loc="1096:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x2b8da2e9e020" loc="944:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x2b8da2eb1940" loc="1068:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x2b8da2ecdc18" loc="1133:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x2b8da2ec8330" loc="1161:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x2b8da2e69a50" loc="90:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x2b8da2e5fa70" loc="213:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x2b8da2eb5020" loc="1041:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x2b8da2a39580" loc="182:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x2b8da2e70928" loc="699:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x2b8da2ecd020" loc="1127:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x2b8da2ec9630" loc="1155:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x2b8da2ec5c58" loc="1183:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x2b8da2ee6348" loc="1211:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x2b8da2eb1330" loc="1066:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x2b8da2ed1be0" loc="1107:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x2b8da2ea8328" loc="877:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x2b8da2ea4328" loc="903:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x2b8da33b1b28" loc="59:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x2b8da2e8a020" loc="769:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x2b8da2e72c20" loc="688:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x2b8da2efd020" loc="55:/home/luis/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x2b8da2f05498" loc="108:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x2b8da2eaa950" loc="867:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x2b8da2ea7020" loc="883:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x2b8da2e8b620" loc="764:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x2b8da2e7dd98" loc="279:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x2b8da2e90020" loc="731:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x2b8da2bd6770" loc="101:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x2b8da2edcc40" loc="1276:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x2b8da2ed9648" loc="1295:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x2b8da2f044f0" loc="116:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x2b8da2eac948" loc="855:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x2b8da2ea1020" loc="921:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x2b8da2f08350" loc="87:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x2b8da2f0d368" loc="63:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x2b8da33cf1d8" loc="220:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x2b8da2eae600" loc="840:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x2b8da2e64498" loc="145:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x2b8da2e76888" loc="675:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x2b8da33af788" loc="68:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x2b8da2e67720" loc="116:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x2b8da2dc0e28" loc="96:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x2b8da2e6da78" loc="41:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x2b8da2a04dd8" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x2b8da2e9f328" loc="938:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x2b8da2eb9610" loc="1017:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x2b8da2ec7600" loc="1167:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x2b8da2ec2320" loc="957:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x2b8da2ec3be0" loc="1195:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x2b8da2ee4310" loc="1223:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x2b8da2ee0940" loc="1251:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x2b8da33d0d40" loc="219:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x2b8da2ed4930" loc="1087:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x2b8da2e72320" loc="685:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x2b8da2e88020" loc="781:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x2b8da2e81c28" loc="830:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x2b8da2ebe020" loc="984:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x2b8da2eb5c28" loc="1045:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x2b8da2ee9248" loc="131:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x2b8da2e81920" loc="829:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x2b8da2e7b6f0" loc="292:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x2b8da2eb3c48" loc="1057:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x2b8da2e69390" loc="84:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x2b8da2ee0328" loc="1247:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x2b8da2eac020" loc="850:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x2b8da2e8c020" loc="755:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SOCK_SYN_SENT" ref="0x2b8da2e37e58" loc="10:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SOCK_SYN_RCVD" ref="0x2b8da2e5a8b0" loc="13:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x2b8da2a39e38" loc="185:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x2b8da2eb3020" loc="1053:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x2b8da2ed5648" loc="1081:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x2b8da2e6cb78" loc="51:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x2b8da2a086d0" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PROTOCOL_PING" ref="0x2b8da2e42418" loc="10:/home/luis/workspace/Project0/src/simbuild/micaz/../../protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x2b8da2dc78e0" loc="27:/home/luis/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x2b8da2ed0940" loc="1113:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x2b8da2ecb020" loc="1141:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x2b8da2e8f958" loc="741:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x2b8da2ede640" loc="1262:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x2b8da2e7b378" loc="289:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x2b8da33e8b78" loc="76:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x2b8da2dbe020" loc="104:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x2b8da2e63a68" loc="157:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x2b8da2e5f020" loc="202:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x2b8da2ebd658" loc="993:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x2b8da2e7f378" loc="255:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x2b8da29fe700" loc="203:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x2b8da29f7bd0" loc="49:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x2b8da2f039f8" loc="128:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x2b8da2dc0a88" loc="95:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x2b8da2e5e1c8" loc="219:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x2b8da2e84630" loc="809:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x2b8da2e82020" loc="819:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x2b8da2eda020" loc="1284:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x2b8da2e86920" loc="796:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x2b8da2e6b398" loc="57:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x2b8da2e89020" loc="774:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x2b8da2a8f020" loc="55:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x2b8da29fe390" loc="200:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x2b8da2ea6020" loc="890:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x2b8da2e6a878" loc="75:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x2b8da2e91020" loc="722:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x2b8da2f0f6c8" loc="47:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x2b8da33b13c8" loc="57:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x2b8da2ebabe8" loc="1014:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x2b8da2eb6320" loc="1035:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x2b8da2f0a4d8" loc="78:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x2b8da2be54e0" loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x2b8da2e7d6e8" loc="277:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x2b8da2eb9310" loc="1016:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x2b8da33d4368" loc="187:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x2b8da2f0f328" loc="46:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x2b8da2edd920" loc="1268:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x2b8da2edac30" loc="1290:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x2b8da2f0c020" loc="67:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x2b8da2eb6928" loc="1037:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x2b8da2e83620" loc="816:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x2b8da2eb1c50" loc="1071:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x2b8da33af020" loc="66:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x2b8da2ec5020" loc="1177:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x2b8da2ee7620" loc="1205:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x2b8da2ee3c30" loc="1233:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x2b8da2e87c48" loc="792:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x2b8da2ea0648" loc="932:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x2b8da2ee3310" loc="1228:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x2b8da2edf8f0" loc="1256:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x2b8da2e61020" loc="173:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x2b8da2ebe620" loc="986:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x2b8da2edb638" loc="1281:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x2b8da33cf538" loc="221:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x2b8da2e65020" loc="135:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x2b8da2b52968" loc="63:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x2b8da2ea4628" loc="904:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:284" name="SIM_LOG_OUTPUT_COUNT" ref="0x2b8da2b023c8" loc="64:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x2b8da2ec0020" loc="970:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x2b8da33e8020" loc="70:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x2b8da2dc1328" loc="88:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x2b8da2ebf320" loc="978:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x2b8da2e87940" loc="791:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x2b8da2eb8610" loc="1024:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x2b8da2e5f3a0" loc="207:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x2b8da2e89c60" loc="780:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x2b8da2edb328" loc="1278:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x2b8da2ed9c58" loc="1297:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_LENGTH" ref="0x2b8da32d0718" loc="25:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x2b8da33e7c40" loc="84:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x2b8da2e70320" loc="697:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x2b8da2e6f020" loc="703:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x2b8da2a8fc48" loc="59:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x2b8da2eabc28" loc="861:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x2b8da2e64140" loc="144:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x2b8da2ea3020" loc="909:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x2b8da2ea1320" loc="922:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x2b8da2ece630" loc="1124:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x2b8da2ecac50" loc="1152:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x2b8da2ed1310" loc="1104:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x2b8da2ecf920" loc="1118:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x2b8da2ea8658" loc="880:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x2b8da2eca020" loc="1146:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x2b8da2e8cc48" loc="761:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x2b8da2ec6620" loc="1174:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x2b8da2ee8c20" loc="1202:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x2b8da29f8d80" loc="48:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x2b8da2e90328" loc="732:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x2b8da2edc328" loc="1273:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x2b8da2e73328" loc="678:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x2b8da2ea7948" loc="886:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x2b8da2e93640" loc="712:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x2b8da2f0dc80" loc="66:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x2b8da2ea9938" loc="874:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x2b8da2ec1630" loc="965:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x2b8da2e7fa60" loc="261:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x2b8da2e66898" loc="131:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x2b8da2eb7948" loc="1032:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x2b8da2e79398" loc="316:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x2b8da2eae020" loc="838:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x2b8da2ea5020" loc="895:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x2b8da2ec0340" loc="973:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x2b8da2eb8310" loc="1023:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x2b8da2e68140" loc="96:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x2b8da2e6fc30" loc="707:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x2b8da2e86620" loc="795:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x2b8da2eac640" loc="854:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x2b8da2ec4c40" loc="1188:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x2b8da2ee5328" loc="1216:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x2b8da2ee1938" loc="1244:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x2b8da2ee9c20" loc="44:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x2b8da2eba8f8" loc="1013:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x2b8da29ffc80" loc="194:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x2b8da33e7960" loc="83:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x2b8da2eb0310" loc="1073:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x2b8da2f0e140" loc="53:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x2b8da33e7020" loc="77:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x2b8da33d4020" loc="186:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x2b8da2be7c60" loc="54:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x2b8da2ec0c30" loc="976:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x2b8da2f08680" loc="88:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x2b8da2e66528" loc="128:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x2b8da2f0ea10" loc="60:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x2b8da2be4020" loc="61:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x2b8da2ee2c20" loc="1238:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x2b8da2e8fc60" loc="742:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x2b8da2eb4950" loc="1051:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x2b8da2e89630" loc="776:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x2b8da2eaf020" loc="831:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x2b8da2eb4320" loc="1047:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x2b8da2f0f020" loc="45:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x2b8da2e9e630" loc="946:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x2b8da2ecc310" loc="1135:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x2b8da2ec8910" loc="1163:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x2b8da2ec3020" loc="1191:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x2b8da2dbf228" loc="97:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x2b8da2a09878" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x2b8da2eaa640" loc="866:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="PROTOCOL_CMD" ref="0x2b8da2e418a8" loc="16:/home/luis/workspace/Project0/src/simbuild/micaz/../../protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x2b8da2e6c140" loc="44:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x2b8da2e84930" loc="810:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x2b8da2ebb948" loc="1006:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x2b8da2eb3940" loc="1056:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x2b8da2e63020" loc="150:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SOCK_ESTABLISHED" ref="0x2b8da2e37480" loc="7:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SOCK_CLOSE_WAIT" ref="0x2b8da2e5a200" loc="11:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x2b8da2ebc970" loc="1001:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x2b8da2e8a630" loc="771:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x2b8da2e71320" loc="690:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x2b8da2eb7640" loc="1031:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x2b8da2e5e538" loc="222:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x2b8da33d18e0" loc="213:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x2b8da2ea7640" loc="885:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x2b8da1ebe5b8" loc="52:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x2b8da1ebebc0" loc="54:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x2b8da2e92630" loc="719:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x2b8da2e8bc20" loc="766:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x2b8da2e82c08" loc="823:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="PROBE" ref="0x2b8da33023d8" loc="12:/home/luis/workspace/Project0/src/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x2b8da2e7d378" loc="274:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x2b8da2ea5630" loc="897:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x2b8da33e6cb0" loc="92:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x2b8da2f02ce8" loc="140:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x2b8da2eb2660" loc="1062:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x2b8da2dc7348" loc="15:/home/luis/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x2b8da2f0ae68" loc="81:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x2b8da1ebe8b8" loc="53:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x2b8da2ee8310" loc="1197:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x2b8da2e85c58" loc="804:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x2b8da2ee48f0" loc="1225:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x2b8da2edf020" loc="1253:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x2b8da2a02a48" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x2b8da2e6c808" loc="48:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x2b8da2eb3328" loc="1054:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x2b8da2e67df0" loc="122:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x2b8da2eacc50" loc="856:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x2b8da2b52348" loc="61:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x2b8da2f0a808" loc="79:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x2b8da2f08c80" loc="90:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x2b8da2ed5020" loc="1077:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x2b8da2e68810" loc="102:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x2b8da2e71948" loc="694:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x2b8da2ea2020" loc="914:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x2b8da2ecfc48" loc="1121:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x2b8da2e801b8" loc="244:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x2b8da2e60538" loc="191:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x2b8da2ed2930" loc="1101:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x2b8da2e616f0" loc="179:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="SYN" ref="0x2b8da3303140" loc="6:/home/luis/workspace/Project0/src/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x2b8da2e7e1b8" loc="267:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x2b8da2f05de0" loc="111:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x2b8da2ecf020" loc="1115:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x2b8da2ecb620" loc="1143:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x2b8da2ec7c10" loc="1171:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x2b8da2e8f328" loc="737:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x2b8da2edec40" loc="1264:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="CMD_TEST_SERVER" ref="0x2b8da32d1810" loc="18:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="AM_PACK" ref="0x2b8da2e394f0" loc="39:/home/luis/workspace/Project0/src/simbuild/micaz/../../packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x2b8da2ea0020" loc="928:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x2b8da33b2488" loc="53:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x2b8da2dc7c60" loc="28:/home/luis/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x2b8da2ea9020" loc="871:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x2b8da33cfc08" loc="223:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x2b8da2eaf330" loc="834:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x2b8da2ebbc58" loc="1007:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x2b8da2eb1020" loc="1065:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x2b8da2e6b710" loc="60:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x2b8da2e7ac38" loc="310:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x2b8da2e6a518" loc="72:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x2b8da2eba020" loc="1010:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="CMD_NEIGHBOR_DUMP" ref="0x2b8da2e49998" loc="14:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x2b8da2ee95c8" loc="132:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x2b8da2ed2620" loc="1098:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x2b8da2bd6070" loc="94:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x2b8da2eb5628" loc="1043:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x2b8da2ea6640" loc="892:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x2b8da2e91630" loc="724:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="PACKET_HEADER_LENGTH" ref="0x2b8da2e41e30" loc="12:/home/luis/workspace/Project0/src/simbuild/micaz/../../packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x2b8da2e4bcc0" loc="30:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x2b8da2e67020" loc="108:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x2b8da2eaa330" loc="865:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x2b8da2ec9c40" loc="1157:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x2b8da2eaf930" loc="836:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x2b8da2ec4328" loc="1185:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x2b8da2ebe928" loc="987:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x2b8da2ee6958" loc="1213:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x2b8da2ee1020" loc="1241:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x2b8da2e76b88" loc="676:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x2b8da2e6bde8" loc="66:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x2b8da2ed9320" loc="1292:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x2b8da2e8d328" loc="751:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x2b8da2ac9c08" loc="76:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="CMD_LINKSTATE_DUMP" ref="0x2b8da2e49d20" loc="15:/home/luis/workspace/Project0/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x2b8da2ee7c20" loc="1207:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x2b8da2be6d08" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x2b8da277c020" loc="54:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x2b8da2ee2320" loc="1235:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x2b8da2e661b8" loc="125:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x2b8da2e9f950" loc="942:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x2b8da2e5e890" loc="223:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x2b8da2e85330" loc="801:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x2b8da2a07528" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x2b8da2e8ec40" loc="747:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x2b8da2eb8c10" loc="1026:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x2b8da2ea4c28" loc="906:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x2b8da2ebd020" loc="989:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x2b8da2ed3c30" loc="1095:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x2b8da2e077c0" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NUM_TASKS" ref="0x2b8da2e074a8" loc="55:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="stopDoneTask" ref="0x2b8da31b1af0" loc="101:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendDoneTask" ref="0x2b8da3180a70" loc="145:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="startDoneTask" ref="0x2b8da3204a98" loc="96:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x2b8da345d020" loc="45:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x2b8da345d340" loc="46:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x2b8da33b3bb0" loc="74:/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x2b8da35c1830" loc="56:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x2b8da35ce4e0" loc="71:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x2b8da35c14f0" loc="55:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="sendBufferTask" ref="0x2b8da3658a50" loc="56:/home/luis/workspace/Project0/src/lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="NUM_CLIENTS" ref="0x2b8da36e4240" loc="48:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x2b8da36e3a10" loc="169:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x2b8da3724af0" loc="126:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x2b8da1ed7120" loc="119:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x2b8da1ed7120"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x2b8da2ddbd70" loc="134:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x2b8da2ddb3c8"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x2b8da2ddbd70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x2b8da3404578" loc="247:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33cc7d8"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x2b8da3404578"/></typename>
      </type-tag>
    </typedef>
    <typedef name="socket_addr_t" ref="0x2b8da2e55020" loc="33:/home/luis/workspace/Project0/src/socket.h">
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x2b8da2e57178"/>
        <typename><typedef-ref name="socket_addr_t" ref="0x2b8da2e55020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x2b8da27e6dc0" loc="225:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x2b8da27e6dc0"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x2b8da1ebfa08" loc="324:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x2b8da1ebfa08"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x2b8da2f064d8" loc="99:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da2f06020"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x2b8da2f064d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x2b8da27c4558" loc="151:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x2b8da27c4558"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x2b8da2dc39b0" loc="16:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x2b8da2dc33c8"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x2b8da2dc39b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int64_t" ref="0x2b8da2782020" loc="43:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x2b8da2782020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x2b8da2783088" loc="38:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x2b8da2783088"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x2b8da2ddb088" loc="129:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x2b8da2ddc020"/>
        <typename><typedef-ref name="serial_header_t" ref="0x2b8da2ddb088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x2b8da2e46530" loc="42:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da2e461d8"/>
        <typename><typedef-ref name="TMilli" ref="0x2b8da2e46530"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__u_char" ref="0x2b8da277c9f8" loc="30:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x2b8da277c9f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x2b8da33e2b90" loc="111:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x2b8da33e2b90"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x2b8da33ff920" loc="278:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x2b8da33ff920"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x2b8da2791130" loc="186:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__intptr_t" ref="0x2b8da2791130"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x2b8da2789978" loc="182:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x2b8da27827a8"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x2b8da2789978"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x2b8da33e1c28" loc="116:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x2b8da33e1c28"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x2b8da27c5778" loc="75:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x2b8da27c5420"/>
        <typename><typedef-ref name="fd_set" ref="0x2b8da27c5778"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x2b8da2ac84f8" loc="51:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2b8da2ac84f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0x2b8da2789d10" loc="183:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x2b8da2789d10"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x2b8da2784020" loc="139:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__time_t" ref="0x2b8da2784020"/></typename>
      </type-int>
    </typedef>
    <typedef name="socketState" ref="0x2b8da2e59638" loc="17:/home/luis/workspace/Project0/src/socket.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref name="socketState" ref="0x2b8da2e37160"/>
        <typename><typedef-ref name="socketState" ref="0x2b8da2e59638"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__ssize_t" ref="0x2b8da278a920" loc="172:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ssize_t" ref="0x2b8da278a920"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x2b8da285b020" loc="28:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x2b8da285b020"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x2b8da27bf7e0" loc="70:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x2b8da27bf7e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x2b8da34024b8" loc="262:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da3403ba0"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x2b8da34024b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x2b8da2a3a350" loc="154:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x2b8da2a3a350"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0x2b8da1ed1768" loc="67:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x2b8da1ed1768"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x2b8da1e31600"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x2b8da1e314a0"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x2b8da2783b98" loc="41:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x2b8da2783b98"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x2b8da2e44450" loc="44:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da2e440f8"/>
        <typename><typedef-ref name="TMicro" ref="0x2b8da2e44450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsword_t" ref="0x2b8da278a588" loc="170:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsword_t" ref="0x2b8da278a588"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x2b8da278bda0" loc="166:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x2b8da278bda0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x2b8da27bfb88" loc="75:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="nlink_t" ref="0x2b8da27bfb88"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x2b8da27bddd0" loc="59:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x2b8da27bddd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x2b8da33ff540" loc="277:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x2b8da33ff540"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x2b8da27e1538" loc="159:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2b8da27e1130"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x2b8da27e1538"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_list_t" ref="0x2b8da27d5228" loc="79:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2b8da27d66d8"/>
        <typename><typedef-ref name="__pthread_list_t" ref="0x2b8da27d5228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x2b8da2b5f560" loc="65:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/heap.h">
      <documentation loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x2b8da2b62b68"/>
        <typename><typedef-ref name="heap_t" ref="0x2b8da2b5f560"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x2b8da2780788" loc="126:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x2b8da2780788"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x2b8da27282f8" loc="446:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x2b8da27282f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x2b8da2b047d8" loc="61:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x2b8da2b05a48"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x2b8da2b047d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x2b8da27b8748" loc="35:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x2b8da27b8748"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x2b8da27e1cc8" loc="167:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x2b8da27e1cc8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0x2b8da27c48c0" loc="152:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x2b8da27c48c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x2b8da2dc8968" loc="11:/home/luis/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x2b8da2dc8968"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x2b8da3402950" loc="265:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da3403ba0"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x2b8da3402950"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x2b8da1ed3020" loc="76:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x2b8da1ed3020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x2b8da2787bf0" loc="134:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b8da2787898"/>
        <typename><typedef-ref name="__fsid_t" ref="0x2b8da2787bf0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x2b8da3402d70" loc="269:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x2b8da3402d70"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x2b8da3400958" loc="272:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x2b8da3400958"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x2b8da1ed5938" loc="106:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast32_t" ref="0x2b8da1ed5938"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x2b8da27d0468" loc="228:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blksize_t" ref="0x2b8da27d0468"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x2b8da1ed1b28" loc="69:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x2b8da1ed1b28"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x2b8da33f50c8" loc="324:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33f6c90"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b8da33f50c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0x2b8da2787368" loc="133:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x2b8da2787368"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x2b8da277b180" loc="32:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x2b8da277b180"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x2b8da33e1858" loc="115:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x2b8da33e1858"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x2b8da33ff160" loc="276:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x2b8da33ff160"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x2b8da2ad1020" loc="51:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2b8da2ad3b58"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2b8da2ad1020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x2b8da2c33ae0" loc="67:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x2b8da2c33ae0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x2b8da27c0958" loc="22:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x2b8da27c0958"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x2b8da33d6978" loc="178:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33d6570"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x2b8da33d6978"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0x2b8da2784af8" loc="143:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x2b8da2784af8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x2b8da2780b40" loc="127:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino_t" ref="0x2b8da2780b40"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x2b8da1ed1020" loc="65:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x2b8da1ed1020"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x2b8da2a2c448" loc="48:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/>
        <typename><typedef-ref name="FILE" ref="0x2b8da2a2c448"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x2b8da28342a0" loc="742:/usr/include/stdlib.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x2b8da28342a0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x2b8da27454d8" loc="39:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x2b8da2747a50"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x2b8da27454d8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x2b8da2eff918" loc="161:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x2b8da2eff918"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x2b8da27883b0" loc="129:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x2b8da27883b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="PacketID" ref="0x2b8da2e43228" loc="9:/home/luis/workspace/Project0/src/packetid.h">
      <type-tag size="I:6" alignment="I:2"><struct-ref name="PacketID" ref="0x2b8da2e44780"/>
        <typename><typedef-ref name="PacketID" ref="0x2b8da2e43228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="locale_t" ref="0x2b8da27458b8" loc="42:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x2b8da2747a50"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x2b8da27458b8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x2b8da2ddec50" loc="121:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x2b8da2dbeb18"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x2b8da2ddec50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x2b8da27bb6c0" loc="91:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x2b8da27bb6c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x2b8da33fcd18" loc="291:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x2b8da33fcd18"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x2b8da33fb908" loc="294:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x2b8da33fb908"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x2b8da27bf448" loc="65:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x2b8da27bf448"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x2b8da27b7600" loc="39:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b8da2787898"/>
        <typename><typedef-ref name="fsid_t" ref="0x2b8da27b7600"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x2b8da2db56f0" loc="59:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x2b8da2db53c8"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x2b8da2db56f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x2b8da1ecf020" loc="36:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x2b8da1ecf020"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x2b8da2b056f8" loc="54:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x2b8da2b06ea0"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x2b8da2b056f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x2b8da27c73f0" loc="48:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="suseconds_t" ref="0x2b8da27c73f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x2b8da27c9b78" loc="37:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x2b8da27c9440"/>
        <typename><typedef-ref name="sigset_t" ref="0x2b8da27c9b78"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x2b8da2eff178" loc="158:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b8da2f00a10"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b8da2eff178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="T32khz" ref="0x2b8da2e46c98" loc="43:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da2e46940"/>
        <typename><typedef-ref name="T32khz" ref="0x2b8da2e46c98"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x2b8da27b83c8" loc="34:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x2b8da27b83c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x2b8da2dc3088" loc="12:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x2b8da2dc5020"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x2b8da2dc3088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x2b8da1ebf230" loc="147:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x2b8da1ebf230"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x2b8da1ebdc90" loc="41:/home/luis/local/tinyos-2.1.1/tos/lib/timer/Timer.h">
      <documentation loc="1:/home/luis/workspace/Project0/src/NodeC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2b8da1ebd938"/>
        <typename><typedef-ref name="TSecond" ref="0x2b8da1ebdc90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x2b8da27d0848" loc="235:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blkcnt_t" ref="0x2b8da27d0848"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x2b8da1ed0778" loc="51:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2b8da1ed0778"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x2b8da272e110" loc="448:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x2b8da272e110"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x2b8da2726460" loc="435:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x2b8da2726460"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x2b8da1ed74f0" loc="122:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x2b8da1ed74f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x2b8da27bd5e8" loc="116:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x2b8da27bd5e8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x2b8da277b548" loc="33:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_long" ref="0x2b8da277b548"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x2b8da1ed5d30" loc="107:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x2b8da1ed5d30"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x2b8da3400578" loc="271:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x2b8da3400578"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x2b8da2783460" loc="39:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x2b8da2783460"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x2b8da27b8020" loc="33:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x2b8da27b8020"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x2b8da2eed608" loc="120:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x2b8da2eed608"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x2b8da1ed45b8" loc="92:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast16_t" ref="0x2b8da1ed45b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x2b8da3400d58" loc="275:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x2b8da3400d58"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x2b8da33fe160" loc="280:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x2b8da33fe160"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x2b8da2a51088" loc="110:/usr/include/stdio.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b8da2a2a710"/>
        <typename><typedef-ref name="fpos_t" ref="0x2b8da2a51088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x2b8da34040c8" loc="244:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33cc7d8"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x2b8da34040c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x2b8da27a02a8" loc="101:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b8da2793e08"/>
        <typename><typedef-ref name="div_t" ref="0x2b8da27a02a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x2b8da2c6f2a8" loc="6:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x2b8da2c70a88"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x2b8da2c6f2a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x2b8da1ebf640" loc="212:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x2b8da1ebf640"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x2b8da277bc90" loc="37:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x2b8da277bc90"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x2b8da27c9798" loc="30:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x2b8da27c9440"/>
        <typename><typedef-ref name="__sigset_t" ref="0x2b8da27c9798"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x2b8da33e27b8" loc="110:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33e4ce0"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x2b8da33e27b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x2b8da2789588" loc="181:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x2b8da2789588"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x2b8da2788020" loc="128:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x2b8da2788020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x2b8da2dc98e8" loc="6:/home/luis/local/tinyos-2.1.1/tos/types/AM.h">
      <documentation loc="34:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x2b8da2dc98e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x2b8da2dd83a0" loc="53:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_header" ref="0x2b8da2dd9a78"/>
        <typename><typedef-ref name="message_header_t" ref="0x2b8da2dd83a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x2b8da2c5e848" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x2b8da2c60d88"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x2b8da2c5e848"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x2b8da2dc8d20" loc="12:/home/luis/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x2b8da2dc8d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x2b8da27276c8" loc="433:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x2b8da27276c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="flagtype" ref="0x2b8da3302660" loc="13:/home/luis/workspace/Project0/src/TCP.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref name="flagtype" ref="0x2b8da3304e70"/>
        <typename><typedef-ref name="flagtype" ref="0x2b8da3302660"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x2b8da2eff548" loc="160:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x2b8da2eff548"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x2b8da1ed3620" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x2b8da1ed3620"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0x2b8da2a3e9f0" loc="358:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x2b8da2a3e9f0"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0x2b8da1ed0020" loc="48:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2b8da1ed0020"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x2b8da27bb250" loc="75:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x2b8da27bb250"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x2b8da272b060" loc="441:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x2b8da272b060"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x2b8da279f820" loc="121:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b8da279f418"/>
        <typename><typedef-ref name="lldiv_t" ref="0x2b8da279f820"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0x2b8da2a45e48" loc="315:/usr/include/libio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x2b8da2a45e48"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x2b8da27d6318" loc="69:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref name="pthread_attr_t" ref="0x2b8da27d8828"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x2b8da27d6318"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x2b8da2a3e0c8" loc="355:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x2b8da2787020"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x2b8da2a3e0c8"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x2b8da27be720" loc="98:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x2b8da27be720"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x2b8da27bbac8" loc="103:/usr/include/time.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x2b8da27bbac8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x2b8da27e69b0" loc="219:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x2b8da27e61a8"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x2b8da27e69b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="LinkState" ref="0x2b8da37e6bb8" loc="11:/home/luis/workspace/Project0/src/lib/modules/../../linkstate.h">
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="LinkState" ref="0x2b8da37a39a8"/>
        <typename><typedef-ref name="LinkState" ref="0x2b8da37e6bb8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x2b8da33e1020" loc="112:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x2b8da33e1020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x2b8da27823f8" loc="44:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x2b8da27823f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x2b8da2780088" loc="124:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x2b8da2780088"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x2b8da272be00" loc="443:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x2b8da272be00"/></typename>
      </type-int>
    </typedef>
    <typedef name="pack" ref="0x2b8da2e3fe80" loc="25:/home/luis/workspace/Project0/src/simbuild/micaz/../../packet.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b8da2e40a88"/>
        <typename><typedef-ref name="pack" ref="0x2b8da2e3fe80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x2b8da2a53c78" loc="79:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x2b8da1e314a0"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x2b8da2a53c78"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="sendInfo" ref="0x2b8da3304b40" loc="16:/home/luis/workspace/Project0/src/sendInfo.h">
      <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x2b8da3304110"/>
        <typename><typedef-ref name="sendInfo" ref="0x2b8da3304b40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__off_t" ref="0x2b8da2788b00" loc="131:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off_t" ref="0x2b8da2788b00"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0x2b8da1ed4200" loc="90:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x2b8da1ed4200"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x2b8da278dd88" loc="158:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt_t" ref="0x2b8da278dd88"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x2b8da2dc2840" loc="22:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x2b8da2dc3d00"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x2b8da2dc2840"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__syscall_ulong_t" ref="0x2b8da27891b0" loc="177:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__syscall_ulong_t" ref="0x2b8da27891b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x2b8da2dc85b8" loc="10:/home/luis/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x2b8da2dc85b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x2b8da1ed78a0" loc="134:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x2b8da1ed78a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x2b8da33ccbe0" loc="241:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33cc7d8"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b8da33ccbe0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x2b8da33e1480" loc="114:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33e4ce0"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x2b8da33e1480"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x2b8da2dd9730" loc="138:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x2b8da2dd9150"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x2b8da2dd9730"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x2b8da278b590" loc="162:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x2b8da278b590"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x2b8da1ed03e8" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2b8da1ed03e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x2b8da2a2ab18" loc="25:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b8da2a2a710"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x2b8da2a2ab18"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x2b8da27c4e40" loc="200:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x2b8da27c4e40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x2b8da3400198" loc="270:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x2b8da3400198"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x2b8da33fc540" loc="287:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x2b8da33fc540"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x2b8da2dc9de0" loc="7:/home/luis/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x2b8da2dc9de0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x2b8da278d5e0" loc="150:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x2b8da278d5e0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x2b8da2dd7708" loc="61:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h">
      <type-tag size="I:4" alignment="I:1"><union-ref name="message_metadata" ref="0x2b8da2dd70b8"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x2b8da2dd7708"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x2b8da2a3f0c8" loc="346:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x2b8da278a920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x2b8da1ebf640"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x2b8da2a3f0c8"/></typename>
      </type-function>
    </typedef>
    <typedef name="SentTuple" ref="0x2b8da2e38020" loc="10:/home/luis/workspace/Project0/src/senttuple.h">
      <type-tag size="I:30" alignment="I:2"><struct-ref name="SentTuple" ref="0x2b8da2e39828"/>
        <typename><typedef-ref name="SentTuple" ref="0x2b8da2e38020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="fd_mask" ref="0x2b8da27c5b60" loc="82:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fd_mask" ref="0x2b8da27c5b60"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x2b8da27242a0" loc="437:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x2b8da27242a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x2b8da2af9a98" loc="10:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/hashtable.h">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x2b8da2af96c0"/>
        <typename><typedef-ref name="hashtable_t" ref="0x2b8da2af9a98"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x2b8da27bf0c8" loc="60:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x2b8da27bf0c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x2b8da2782b80" loc="53:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x2b8da2782b80"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x2b8da27c2928" loc="202:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x2b8da27c2928"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x2b8da27d8088" loc="243:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x2b8da27d8088"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x2b8da1ed5148" loc="103:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x2b8da1ed5148"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0x2b8da277c328" loc="55:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x2b8da277e8f8"/>
        <typename><typedef-ref name="idtype_t" ref="0x2b8da277c328"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__rlim64_t" ref="0x2b8da27857c0" loc="137:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x2b8da27857c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__key_t" ref="0x2b8da2784e40" loc="144:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x2b8da2784e40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x2b8da27843d8" loc="140:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x2b8da27843d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x2b8da33df9e8" loc="130:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33df5e0"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x2b8da33df9e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x2b8da33fc160" loc="286:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x2b8da33fc160"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x2b8da2a41060" loc="338:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x2b8da278a920"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x2b8da1ebf640"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x2b8da2a41060"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x2b8da2727020" loc="432:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x2b8da2727020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x2b8da1ed9320" loc="34:/usr/include/inttypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x2b8da1ed9320"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x2b8da33fb158" loc="292:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x2b8da33fb158"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_storage_t" ref="0x2b8da2e4e848" loc="69:/home/luis/workspace/Project0/src/socket.h">
      <type-tag size="I:10352" alignment="I:4"><struct-ref name="socket_storage_t" ref="0x2b8da2e55380"/>
        <typename><typedef-ref name="socket_storage_t" ref="0x2b8da2e4e848"/></typename>
      </type-tag>
    </typedef>
    <typedef name="register_t" ref="0x2b8da27c03c8" loc="205:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x2b8da27c03c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x2b8da27e35b8" loc="240:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2b8da27e31b0"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x2b8da27e35b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x2b8da33f9ce0" loc="309:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33f98d8"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b8da33f9ce0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x2b8da33e2178" loc="108:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/home/luis/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33e4ce0"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b8da33e2178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x2b8da27bee38" loc="109:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x2b8da27bee38"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x2b8da27827a8" loc="52:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x2b8da27827a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x2b8da1ecf7e8" loc="38:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x2b8da1ecf7e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0x2b8da1ed0b40" loc="55:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x2b8da1ed0b40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Route" ref="0x2b8da2e38d80" loc="9:/home/luis/workspace/Project0/src/route.h">
      <type-tag size="I:6" alignment="I:2"><struct-ref name="Route" ref="0x2b8da2e38330"/>
        <typename><typedef-ref name="Route" ref="0x2b8da2e38d80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_long" ref="0x2b8da27b8ae0" loc="36:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_long" ref="0x2b8da27b8ae0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x2b8da2ef8cb0" loc="94:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x2b8da2ef8cb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_t" ref="0x2b8da2e4ebf8" loc="71:/home/luis/workspace/Project0/src/socket.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="socket_t" ref="0x2b8da2e4ebf8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x2b8da29fdc68" loc="308:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x2b8da29feab8"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x2b8da29fdc68"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x2b8da2729508" loc="444:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x2b8da2729508"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x2b8da272b730" loc="442:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x2b8da272b730"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x2b8da27d84f8" loc="60:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="pthread_t" ref="0x2b8da27d84f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x2b8da278d9a8" loc="153:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blksize_t" ref="0x2b8da278d9a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x2b8da1edc020" loc="275:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b8da1ed9b98"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x2b8da1edc020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x2b8da2788780" loc="130:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__nlink_t" ref="0x2b8da2788780"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x2b8da33d2a28" loc="205:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33d2170"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x2b8da33d2a28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__id_t" ref="0x2b8da2785b38" loc="138:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x2b8da2785b38"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least32_t" ref="0x2b8da1ed39e8" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x2b8da1ed39e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x2b8da2a2a020" loc="94:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2b8da2a2baa8"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x2b8da2a2a020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x2b8da2dd8d10" loc="57:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x2b8da2dd86e8"/>
        <typename><typedef-ref name="message_footer_t" ref="0x2b8da2dd8d10"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x2b8da33fed20" loc="285:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x2b8da33fed20"/></typename>
      </type-int>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0x2b8da2793808" loc="71:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x2b8da27932a8"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0x2b8da2793808"/></typename>
      </type-tag>
    </typedef>
    <typedef name="NeighborTuple" ref="0x2b8da2e43dc8" loc="8:/home/luis/workspace/Project0/src/neighbortuple.h">
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="NeighborTuple" ref="0x2b8da2e43588"/>
        <typename><typedef-ref name="NeighborTuple" ref="0x2b8da2e43dc8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x2b8da278b180" loc="159:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x2b8da278b180"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x2b8da27d0c30" loc="239:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x2b8da27d0c30"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x2b8da27be3a0" loc="86:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x2b8da27be3a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x2b8da277cdc8" loc="31:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x2b8da277cdc8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x2b8da2727d70" loc="434:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x2b8da2727d70"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x2b8da27b8e78" loc="37:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x2b8da27b8e78"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x2b8da2784798" loc="141:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__suseconds_t" ref="0x2b8da2784798"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x2b8da27e49e0" loc="234:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:8"><union-ref ref="0x2b8da27e45d8"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x2b8da27e49e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x2b8da3402020" loc="259:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da3403ba0"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b8da3402020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x2b8da277b8f8" loc="36:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x2b8da277b8f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x2b8da2a3c630" loc="30:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b8da2a3c228"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x2b8da2a3c630"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x2b8da278d228" loc="147:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x2b8da278d228"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x2b8da1ed5540" loc="105:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast16_t" ref="0x2b8da1ed5540"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x2b8da33fe940" loc="284:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x2b8da33fe940"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x2b8da1ed7c70" loc="135:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x2b8da1ed7c70"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x2b8da2dc8228" loc="8:/home/luis/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x2b8da2dc8228"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x2b8da2785020" loc="135:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__clock_t" ref="0x2b8da2785020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x2b8da2726b28" loc="436:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x2b8da2726b28"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x2b8da27853e8" loc="136:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim_t" ref="0x2b8da27853e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x2b8da27b7268" loc="38:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x2b8da27b7268"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x2b8da1ed4970" loc="93:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast32_t" ref="0x2b8da1ed4970"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x2b8da1ed13e0" loc="66:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x2b8da1ed13e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x2b8da27a0ce8" loc="109:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2b8da27a08e0"/>
        <typename><typedef-ref name="ldiv_t" ref="0x2b8da27a0ce8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x2b8da27c2e70" loc="203:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x2b8da27c2e70"/></typename>
      </type-int>
    </typedef>
    <typedef name="User" ref="0x2b8da2e4cb98" loc="9:/home/luis/workspace/Project0/src/users.h">
      <type-tag size="I:168" alignment="I:8"><struct-ref name="User" ref="0x2b8da2e4c020"/>
        <typename><typedef-ref name="User" ref="0x2b8da2e4cb98"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int16_t" ref="0x2b8da27c23e0" loc="201:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x2b8da27c23e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x2b8da33d88c0" loc="163:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33d84b8"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b8da33d88c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TCP" ref="0x2b8da3300228" loc="25:/home/luis/workspace/Project0/src/TCP.h">
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="TCP" ref="0x2b8da3302958"/>
        <typename><typedef-ref name="TCP" ref="0x2b8da3300228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x2b8da33d1020" loc="208:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33d2170"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x2b8da33d1020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x2b8da1ed3de8" loc="80:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x2b8da1ed3de8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x2b8da27837f8" loc="40:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x2b8da27837f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x2b8da27e7998" loc="213:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref ref="0x2b8da27e74e0"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x2b8da27e7998"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x2b8da285b378" loc="29:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x2b8da285b378"/></typename>
      </type-float>
    </typedef>
    <typedef name="__fd_mask" ref="0x2b8da27c77a8" loc="54:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fd_mask" ref="0x2b8da27c77a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x2b8da2ac93d8" loc="65:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2b8da2ac93d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x2b8da278b990" loc="163:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x2b8da278b990"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x2b8da2be3718" loc="71:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x2b8da2be43a0"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x2b8da2be3718"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x2b8da2a2c8a0" loc="64:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2b8da2a2c078"/>
        <typename><typedef-ref name="__FILE" ref="0x2b8da2a2c8a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x2b8da2a3cb50" loc="40:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x2b8da1e314a0"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x2b8da2a3cb50"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x2b8da2729bd8" loc="445:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x2b8da2729bd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0x2b8da2787020" loc="132:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x2b8da2787020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x2b8da33fb530" loc="293:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x2b8da33fb530"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x2b8da278a1c8" loc="167:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x2b8da278a1c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x2b8da33fe560" loc="283:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x2b8da33fe560"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x2b8da33fc920" loc="288:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x2b8da33fc920"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x2b8da1ecfb68" loc="40:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x2b8da1ecfb68"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x2b8da1ecf4a0" loc="37:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x2b8da1ecf4a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ulong" ref="0x2b8da27c41a8" loc="150:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ulong" ref="0x2b8da27c41a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x2b8da1ed4d28" loc="94:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x2b8da1ed4d28"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x2b8da27be020" loc="80:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x2b8da27be020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__syscall_slong_t" ref="0x2b8da278ad28" loc="175:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__syscall_slong_t" ref="0x2b8da278ad28"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x2b8da2dd4020" loc="19:/home/luis/local/tinyos-2.1.1/tos/types/message.h">
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8da2dd7a20"/>
        <typename><typedef-ref name="message_t" ref="0x2b8da2dd4020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x2b8da2724968" loc="438:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x2b8da2724968"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x2b8da33db178" loc="146:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33dcd48"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b8da33db178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0x2b8da27b7998" loc="44:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x2b8da27b7998"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0x2b8da27914f8" loc="189:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x2b8da27914f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x2b8da2b6f088" loc="65:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x2b8da2b70888"/>
        <typename><typedef-ref name="node_t" ref="0x2b8da2b6f088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x2b8da2780408" loc="125:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x2b8da2780408"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x2b8da27218e8" loc="431:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x2b8da27218e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x2b8da2be18d0" loc="83:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x2b8da2be3b38"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x2b8da2be18d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x2b8da27bea90" loc="104:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x2b8da27bea90"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x2b8da27dc680" loc="127:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:40" alignment="I:8"><union-ref ref="0x2b8da27dc1c8"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x2b8da27dc680"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x2b8da2bd5528" loc="120:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x2b8da2bd5528"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x2b8da27e2918" loc="153:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:8"><union-ref ref="0x2b8da27e2460"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x2b8da27e2918"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x2b8da27e1918" loc="163:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x2b8da27e1918"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x2b8da27b7d18" loc="48:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino_t" ref="0x2b8da27b7d18"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x2b8da27bd240" loc="115:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x2b8da27bd240"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x2b8da2bc2738" loc="61:/usr/include/x86_64-linux-gnu/sys/time.h">
      <documentation loc="32:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x2b8da2bc2738"/></typename>
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0x2b8da2bc3c58"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x2b8da27289f0" loc="447:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x2b8da27289f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x2b8da27bd968" loc="122:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x2b8da27bd968"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x2b8da27db228" loc="133:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2b8da27dcdf8"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x2b8da27db228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x2b8da2dc2c68" loc="83:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <documentation loc="71:/home/luis/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x2b8da2dc2c68"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x2b8da33d2578" loc="202:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b8da33d2170"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b8da33d2578"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x2b8da33ffd00" loc="279:/home/luis/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x2b8da33ffd00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x2b8da3203230" loc="96:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x2b8da3204088" loc="101:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x2b8da31b1020" loc="145:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x2b8da31fdcb0" loc="64:/home/luis/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x2b8da31fd860"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x2b8da31fdcb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x2b8da359b138" loc="74:/home/luis/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x2b8da35cea58" loc="71:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x2b8da35c0d90" loc="66:/home/luis/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x2b8da35c0778"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x2b8da35c0d90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_sendBufferTask" ref="0x2b8da36a4020" loc="56:/home/luis/workspace/Project0/src/lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="queue_entry_t" ref="0x2b8da36db938" loc="57:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x2b8da36db5e0"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x2b8da36db938"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x2b8da3724020" loc="169:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x2b8da3723088" loc="126:/home/luis/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="hashmapEntry" ref="0x2b8da3942430" loc="20:/home/luis/workspace/Project0/src/dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-tag size="U:" alignment="U:"><struct-ref name="hashmapEntry" scoped="" ref="0x2b8da3943c28"/>
        <typename><typedef-ref name="hashmapEntry" scoped="" ref="0x2b8da3942430"/></typename>
      </type-tag>
    </typedef>
  </typedefs>
</nesc>
